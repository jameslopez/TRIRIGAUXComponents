{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "The `triplat-zoom-slider` is a custom element that allows the user to select a value from a range of values by moving the slider thumb or pressing the increase or decrease icons. The component can be used as a zoom slider of the `triplat-graphic-zoomable`. \n\n\t<triplat-zoom-slider min=\"0.01\" max=\"1.5\" step=\"0.1\" value=\"{{_zoomScale}}\">\n\t</triplat-zoom-slider>\n\t\n\t<triplat-graphic record-id=\"10101010\">\n\t  <triplat-graphic-zoomable scale=\"{{_zoomScale}}\" cached></triplat-graphic-zoomable>\n\t</triplat-graphic>\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--triplat-zoom-slider-container` | Style for the zoom slider | `{}`",
      "summary": "",
      "path": "triplat-zoom-slider.js",
      "properties": [
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed for a value when a value is decreased.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed for a value when a value is increased.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "100"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when increasing or decreasing a value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "10"
        },
        {
          "name": "value",
          "type": "number | null | undefined",
          "description": "Numeric value for the zoom slider.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "50"
        },
        {
          "name": "_normalizingFactor",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "_normalizedMin",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 112,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_normalizedMax",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "increaseValue",
          "description": "Increase the value by a given step.\nIf max value is set, value cannot be larger than max.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 1
            },
            "end": {
              "line": 132,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "decreaseValue",
          "description": "Decrease the value by a given step.\nIf min value is set, value cannot be smaller than min.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 1
            },
            "end": {
              "line": 141,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeNormalizedMin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "_normalizingFactor"
            }
          ]
        },
        {
          "name": "_computeNormalizedMax",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 4
            },
            "end": {
              "line": 157,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "_normalizingFactor"
            }
          ]
        },
        {
          "name": "_handleSliderValueChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 4
            },
            "end": {
              "line": 161,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSlideValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 4
            },
            "end": {
              "line": 169,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "_normalizingFactor"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkValueLimits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeNormalizingFactor",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 191,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "_decimalPlaces",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "num"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 8
        },
        "end": {
          "line": 199,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "min",
          "description": "Optional minimum allowed for a value when a value is decreased.",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "Optional maximum allowed for a value when a value is increased.",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step",
          "description": "Amount to add or subtract when increasing or decreasing a value.",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "value",
          "description": "Numeric value for the zoom slider.",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-zoom-slider"
    }
  ]
}
