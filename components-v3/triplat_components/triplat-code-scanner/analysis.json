{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`triplat-barcode-scanner` uses the device camera to scan a barcode.\n\nExample:\n\n```html\n<triplat-barcode-scanner decoded-data=\"{{_decodedData}}\"></triplat-barcode-scanner>\n```",
      "summary": "",
      "path": "triplat-barcode-scanner.js",
      "properties": [
        {
          "name": "timeout",
          "type": "number | null | undefined",
          "description": "The time in milliseconds when the camera should be active.\nAfter the timeout, the related component will fire an event, so an action can be performed on the application side,\nsuch as: stop the camera, display a message for the user, etc.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 19,
              "column": 3
            },
            "end": {
              "line": 22,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "_isVideoActive",
          "type": "boolean | null | undefined",
          "description": "True if the video is active.",
          "privacy": "protected",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 27,
              "column": 3
            },
            "end": {
              "line": 32,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "_timeoutId",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 34,
              "column": 3
            },
            "end": {
              "line": 37,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "decodedData",
          "type": "string | null | undefined",
          "description": "The decoded data from the barcode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "types",
          "type": "Array | null | undefined",
          "description": "An array with the types of barcodes which can be decoded during the session.\nThe default value is \"code_128_reader\".\nThe possible values are: \"code_128_reader\", \"ean_reader\", \"ean_8_reader\", \"code_39_reader\", \"code_39_vin_reader\",\n\"codabar_reader\", \"upc_reader\", \"upc_e_reader\", \"i2of5_reader\", \"2of5_reader\", and \"code_93_reader\".",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[\"code_128_reader\"]"
        },
        {
          "name": "validatorCallback",
          "type": "Object | null | undefined",
          "description": "Callback function used to determine if the decoded data is valid.\nWhen a validator callback is set, the component will only provide the `decodedData`,\nand fire the `barcode-detected` event when the data is valid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "hasCamera",
          "description": "Return `true` if the current device that is running a code-scanner component, has a camera.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 45,
              "column": 1
            },
            "end": {
              "line": 51,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "startTimer",
          "description": "Start the timer for the timeout",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 196,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_barcodeDetectionResponse",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 2
            },
            "end": {
              "line": 146,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "start",
          "description": "Initialize the device camera to scan the barcode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 180,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "stop",
          "description": "Stop the device camera.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 2
            },
            "end": {
              "line": 189,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/barcode-demo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 30,
          "column": 1
        },
        "end": {
          "line": 197,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TriplatBarcodeScanner",
      "attributes": [
        {
          "name": "timeout",
          "description": "The time in milliseconds when the camera should be active.\nAfter the timeout, the related component will fire an event, so an action can be performed on the application side,\nsuch as: stop the camera, display a message for the user, etc.",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 19,
              "column": 3
            },
            "end": {
              "line": 22,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "decoded-data",
          "description": "The decoded data from the barcode.",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "types",
          "description": "An array with the types of barcodes which can be decoded during the session.\nThe default value is \"code_128_reader\".\nThe possible values are: \"code_128_reader\", \"ean_reader\", \"ean_8_reader\", \"code_39_reader\", \"code_39_vin_reader\",\n\"codabar_reader\", \"upc_reader\", \"upc_e_reader\", \"i2of5_reader\", \"2of5_reader\", and \"code_93_reader\".",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "validator-callback",
          "description": "Callback function used to determine if the decoded data is valid.\nWhen a validator callback is set, the component will only provide the `decodedData`,\nand fire the `barcode-detected` event when the data is valid.",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "barcode-detected",
          "description": "Fired when the scanner detects a barcode and returns a result.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "barcode-error",
          "description": "Fired when an error occurs in starting the camera.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "barcode-timeout",
          "description": "Fired when the timeout expires.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "decoded-data-changed",
          "description": "Fired when the `decodedData` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-barcode-scanner",
      "mixins": [
        "TriplatCodeScannerMixin"
      ]
    },
    {
      "description": "`triplat-qrcode-scanner` uses the camera on a device to scan a QR code.\n\nExample:\n\n```html\n<triplat-qrcode-scanner decoded-data=\"{{_decodedData}}\"></triplat-qrcode-scanner>\n```",
      "summary": "",
      "path": "triplat-qrcode-scanner.js",
      "properties": [
        {
          "name": "timeout",
          "type": "number | null | undefined",
          "description": "The time in milliseconds when the camera should be active.\nAfter the timeout, the related component will fire an event, so an action can be performed on the application side,\nsuch as: stop the camera, display a message for the user, etc.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 19,
              "column": 3
            },
            "end": {
              "line": 22,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "_isVideoActive",
          "type": "boolean | null | undefined",
          "description": "True if the video is active.",
          "privacy": "protected",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 27,
              "column": 3
            },
            "end": {
              "line": 32,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "_timeoutId",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 34,
              "column": 3
            },
            "end": {
              "line": 37,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "decodedData",
          "type": "string | null | undefined",
          "description": "The decoded data from the QR code.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_video",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_stream",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_canvasElement",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_canvas",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "hasCamera",
          "description": "Return `true` if the current device that is running a code-scanner component, has a camera.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 45,
              "column": 1
            },
            "end": {
              "line": 51,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          },
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "startTimer",
          "description": "Start the timer for the timeout",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 2
            },
            "end": {
              "line": 190,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 128,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "start",
          "description": "Initialize the camera to scan the QR code.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 148,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_scan",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_qrcodeDetectionResponse",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 173,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "code"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "stop",
          "description": "Stop the camera.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/qrcode-demo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 30,
          "column": 1
        },
        "end": {
          "line": 191,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TriplatQrcodeScanner",
      "attributes": [
        {
          "name": "timeout",
          "description": "The time in milliseconds when the camera should be active.\nAfter the timeout, the related component will fire an event, so an action can be performed on the application side,\nsuch as: stop the camera, display a message for the user, etc.",
          "sourceRange": {
            "file": "triplat-code-scanner-mixin.js",
            "start": {
              "line": 19,
              "column": 3
            },
            "end": {
              "line": 22,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriplatCodeScannerMixin"
        },
        {
          "name": "decoded-data",
          "description": "The decoded data from the QR code.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "qrcode-detected",
          "description": "Fired when the scanner detects a QR code and returns a result.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "qrcode-error",
          "description": "Fired when an error occurs in starting the camera.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "qrcode-timeout",
          "description": "Fired when the timeout expires.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "decoded-data-changed",
          "description": "Fired when the `decodedData` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-qrcode-scanner",
      "mixins": [
        "TriplatCodeScannerMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "This mixin holds common properties and functions that are used by both code-scanner components: `triplat-barcode-scanner` and `triplat-qrcode-scanner`.",
      "summary": "",
      "path": "triplat-code-scanner-mixin.js",
      "properties": [
        {
          "name": "timeout",
          "type": "number | null | undefined",
          "description": "The time in milliseconds when the camera should be active.\nAfter the timeout, the related component will fire an event, so an action can be performed on the application side,\nsuch as: stop the camera, display a message for the user, etc.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 3
            },
            "end": {
              "line": 22,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_isVideoActive",
          "type": "boolean | null | undefined",
          "description": "True if the video is active.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 3
            },
            "end": {
              "line": 32,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_timeoutId",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 3
            },
            "end": {
              "line": 37,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "hasCamera",
          "description": "Return `true` if the current device that is running a code-scanner component, has a camera.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 1
            },
            "end": {
              "line": 51,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "startTimer",
          "description": "Start the timer for the timeout",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 1
            },
            "end": {
              "line": 68,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "{\n  eventNameToDispatch\n}"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 7
        },
        "end": {
          "line": 69,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "TriplatCodeScannerMixin",
      "attributes": [
        {
          "name": "timeout",
          "description": "The time in milliseconds when the camera should be active.\nAfter the timeout, the related component will fire an event, so an action can be performed on the application side,\nsuch as: stop the camera, display a message for the user, etc.",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 3
            },
            "end": {
              "line": 22,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
