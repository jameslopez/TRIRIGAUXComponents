{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "The `triplat-availability-layout` provides layout settings and must be used as an inner element of the `triplat-availability` component. \n\n> **Caution: This component was upgraded to Polymer 3, but was not fully tested. Please use this component with caution.**\n\nAdditional information including examples can be found on the `triplat-availability` documentation page.",
      "summary": "",
      "path": "triplat-availability-layout.js",
      "properties": [
        {
          "name": "maxViewMode",
          "type": "string | null | undefined",
          "description": "The maximum view mode available for the availability component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": false,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "defaultViewMode",
          "type": "string | null | undefined",
          "description": "The default view mode for the availability component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": false,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "singleSelect",
          "type": "boolean | null | undefined",
          "description": "Whether the single selection is enabled.\nBecause the multiple selection is not yet supported, the default\nvalue of this property is true.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": false,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "columns",
          "type": "Object | null | undefined",
          "description": "The columns that are displayed for each resource in the availability\ncomponent. It is an object that must be formatted as follows: <br/>\n\nvar columns = {\n\troom: \"Room Name\",\n\tfloor: \"Floor number\",\n\tcapacity: \"Max capacity\"\n};\n\n<b>room</b>, <b>floor</b> and <b>capacity</b> are\nthe data source fields.\n<b>\"Room Name\"</b>, <b>\"Floor number\"</b> and <b>\"Max capacity\"</b>\nrepresent how these fields (columns) will be displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": false,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "homeOnlyToolbar",
          "type": "boolean | null | undefined",
          "description": "Whether there is only the Home button in the toolbar.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_layout",
          "type": "Object | null | undefined",
          "description": "An internal representation of the view.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_layoutChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 1
            },
            "end": {
              "line": 113,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "maxViewMode"
            },
            {
              "name": "defaultViewMode"
            },
            {
              "name": "singleSelect"
            },
            {
              "name": "columns"
            },
            {
              "name": "homeOnlyToolbar"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_layoutChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 1
            },
            "end": {
              "line": 117,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "layout"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 8
        },
        "end": {
          "line": 119,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "max-view-mode",
          "description": "The maximum view mode available for the availability component.",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "default-view-mode",
          "description": "The default view mode for the availability component.",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "single-select",
          "description": "Whether the single selection is enabled.\nBecause the multiple selection is not yet supported, the default\nvalue of this property is true.",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "columns",
          "description": "The columns that are displayed for each resource in the availability\ncomponent. It is an object that must be formatted as follows: <br/>\n\nvar columns = {\n\troom: \"Room Name\",\n\tfloor: \"Floor number\",\n\tcapacity: \"Max capacity\"\n};\n\n<b>room</b>, <b>floor</b> and <b>capacity</b> are\nthe data source fields.\n<b>\"Room Name\"</b>, <b>\"Floor number\"</b> and <b>\"Max capacity\"</b>\nrepresent how these fields (columns) will be displayed.",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "home-only-toolbar",
          "description": "Whether there is only the Home button in the toolbar.",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "triplat-availability-layout-change",
          "description": "Fired when the layout properties change.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-availability-layout"
    },
    {
      "description": "The `triplat-availability-data-context` provides context settings and must be used as an inner element of the `triplat-availability-data` component. \n\n> **Caution: This component was upgraded to Polymer 3, but was not fully tested. Please use this component with caution.**\n\nAdditional information including examples can be found on the `triplat-availability` documentation page.",
      "summary": "",
      "path": "triplat-availability-data-context.js",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "The name of the context data source.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": false,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "contextId",
          "type": "string | null | undefined",
          "description": "The context ID.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": false,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_context",
          "type": "Object | null | undefined",
          "description": "An internal representation of the context.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 55,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_contextChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 1
            },
            "end": {
              "line": 73,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "contextId"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_contextChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 1
            },
            "end": {
              "line": 77,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 8
        },
        "end": {
          "line": 79,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the context data source.",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "context-id",
          "description": "The context ID.",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "triplat-availability-data-context-change",
          "description": "Fired when the data context properties change.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-availability-data-context"
    },
    {
      "description": "The `triplat-availability-data` provides data settings and must be used as an inner element of the `triplat-availability` component. \n\n> **Caution: This component was upgraded to Polymer 3, but was not fully tested. Please use this component with caution.**\n\nAdditional information including examples can be found on the `triplat-availability` documentation page.",
      "summary": "",
      "path": "triplat-availability-data.js",
      "properties": [
        {
          "name": "datasource",
          "type": "string | null | undefined",
          "description": "The name of the data source from which the\nresources are retrieved.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 48,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": false,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "includeUnavailable",
          "type": "boolean | null | undefined",
          "description": "Whether the unavailable time for each resource is\nretrieved.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "calendarSetName",
          "type": "string | null | undefined",
          "description": "The calendar set name to which the resources\nare associated.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_data",
          "type": "Object | null | undefined",
          "description": "An internal representation of the data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_dataChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_contexts",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": false,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "_contextChildren",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datasource"
            },
            {
              "name": "includeUnavailable"
            },
            {
              "name": "calendarSetName"
            },
            {
              "name": "splices"
            },
            {
              "name": "contextChildren"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dataChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_contextChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 8
        },
        "end": {
          "line": 119,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "datasource",
          "description": "The name of the data source from which the\nresources are retrieved.",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 48,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "include-unavailable",
          "description": "Whether the unavailable time for each resource is\nretrieved.",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "calendar-set-name",
          "description": "The calendar set name to which the resources\nare associated.",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "triplat-availability-data-change",
          "description": "Fired when the data properties change.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-availability-data"
    },
    {
      "description": "This is component is used to verify the availability of reservation resources. It shows unavailable, available and busy time for each resource.\n\n> **Caution: This component was upgraded to Polymer 3, but was not fully tested. Please use this component with caution.**\n\n### Declaring Example\n\nThe following example shows how the component can be used, how the events can be handled, and which inner elements are needed. For more information, refer to the documentation page of `triplat-availability-layout`, `triplat-availability-data` and `triplat-availability-data-context`.\n\n\t<triplat-availability on-resource-click=\"_handleResourceClick\"\n\t  on-row-limit=\"_handleRowLimit\" selected=\"{{_selectedResources}}\"\n\t  loading=\"{{_availabilityLoading}}\">\n\n\t  <triplat-availability-layout default-view-mode=\"day\"\n\t\tmax-view-mode=\"month\" columns=\"[[_columns]]\" home-only-toolbar>\n\t  </triplat-availability-layout>\n\n\t  <triplat-availability-data datasource=\"lookupRoom\" \n\t\tcalendar-set-name=\"triResourceAvailability\" include-unavailable>\n\n\t\t<triplat-availability-data-context name=\"myReservationManagers\"\n\t\t  context-id=\"[[specId]]\">\n\t\t</triplat-availability-data-context>\n\n\t  </triplat-availability-data>\n\n\t</triplat-availability>\n\n#### Script code\n\n\t_handleResourceClick: function(e){\n\t  var resourceId = e.detail.resourceId;\n\t  // Do something with the resourceId\n\t  // You can open a popup to show the resource's detail.\n\t},\n\n\t_handleRowLimit: function(e){\n\t  // There is a default message provided by the component\n\t  var alertMessage = e.detail;\n\t  // You can use the message to show a warning\n\n\t  // Or you can start any processing that depends on this condition\n\t}",
      "summary": "",
      "path": "triplat-availability.js",
      "properties": [
        {
          "name": "selected",
          "type": "Array | null | undefined",
          "description": "An array containing the resources\nthat are selected through this component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 3
            },
            "end": {
              "line": 156,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "A flag that can notify the user when this\ncomponent is requesting data from the server.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 3
            },
            "end": {
              "line": 167,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "visibleResources",
          "type": "Array | null | undefined",
          "description": "If this property is set, the availability component will display only the resources that are contained in this array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 3
            },
            "end": {
              "line": 174,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_layout",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 3
            },
            "end": {
              "line": 179,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_data",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 3
            },
            "end": {
              "line": 184,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_modelAndView",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 3
            },
            "end": {
              "line": 189,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_instanceId",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 3
            },
            "end": {
              "line": 194,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_layoutAjax",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 3
            },
            "end": {
              "line": 200,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_dataAjax",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 3
            },
            "end": {
              "line": 206,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_textAjax",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 3
            },
            "end": {
              "line": 212,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_layoutRequestBody",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 3
            },
            "end": {
              "line": 217,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_dataRequestBody",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 3
            },
            "end": {
              "line": 222,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_refresh",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 3
            },
            "end": {
              "line": 227,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_layoutLoaded",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 3
            },
            "end": {
              "line": 232,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_dataLoaded",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 3
            },
            "end": {
              "line": 237,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_textLoaded",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 3
            },
            "end": {
              "line": 242,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_dataXml",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 3
            },
            "end": {
              "line": 248,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_layoutXml",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 3
            },
            "end": {
              "line": 254,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_textXml",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 3
            },
            "end": {
              "line": 260,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_warningMessage",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 3
            },
            "end": {
              "line": 265,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_dateRangeStart",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 3
            },
            "end": {
              "line": 270,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_dateRangeEnd",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 3
            },
            "end": {
              "line": 275,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_occurrenceCount",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 3
            },
            "end": {
              "line": 280,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_currentOccurrence",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 3
            },
            "end": {
              "line": 285,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_treeGridLoaded",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 3
            },
            "end": {
              "line": 290,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_treeGridLoading",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 3
            },
            "end": {
              "line": 295,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 2
            },
            "end": {
              "line": 334,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_loadTreeGridLib",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 2
            },
            "end": {
              "line": 344,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleTreeGridLibLoaded",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 2
            },
            "end": {
              "line": 349,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "refresh",
          "description": "Refreshes the component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 2
            },
            "end": {
              "line": 361,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "scrollToHome",
          "description": "Scrolls to the initial date range.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 2
            },
            "end": {
              "line": 368,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "scrollToCurrentOccurrence",
          "description": "Scrolls to the current occurrence of\na recurring meeting.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 2
            },
            "end": {
              "line": 376,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "nextOccurrence",
          "description": "Scrolls to the next occurrence of\na recurring meeting.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 2
            },
            "end": {
              "line": 386,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "previousOccurrence",
          "description": "Scrolls to the previous occurrence of\na recurring meeting.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 2
            },
            "end": {
              "line": 396,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_scrollToOccurrence",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 2
            },
            "end": {
              "line": 411,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "occurrence"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "hasNextOccurrence",
          "description": "Whether there is a next occurrence for a\nrecurring meeting.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 418,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "hasPreviousOccurrence",
          "description": "Whether there is a previous occurrence for a\nrecurring meeting.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 427,
              "column": 2
            },
            "end": {
              "line": 429,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_layoutChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 2
            },
            "end": {
              "line": 434,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dataChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 2
            },
            "end": {
              "line": 439,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildLayoutRequestBody",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 2
            },
            "end": {
              "line": 454,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "modelAndView"
            },
            {
              "name": "instanceId"
            },
            {
              "name": "data"
            },
            {
              "name": "layout"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildDataRequestBody",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 456,
              "column": 2
            },
            "end": {
              "line": 471,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "modelAndView"
            },
            {
              "name": "instanceId"
            },
            {
              "name": "data"
            },
            {
              "name": "layout"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_triggerAvailabilityRequests",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 473,
              "column": 2
            },
            "end": {
              "line": 508,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "layoutRequestBody"
            },
            {
              "name": "dataRequestBody"
            },
            {
              "name": "refresh"
            },
            {
              "name": "treeGridLoaded"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getDataForOccurrence",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 510,
              "column": 2
            },
            "end": {
              "line": 518,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "occurrenceStart"
            },
            {
              "name": "occurrenceEnd"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createLayoutRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 520,
              "column": 2
            },
            "end": {
              "line": 524,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requestBody"
            }
          ]
        },
        {
          "name": "_createDataRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 526,
              "column": 2
            },
            "end": {
              "line": 530,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requestBody"
            }
          ]
        },
        {
          "name": "_createTextRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 532,
              "column": 2
            },
            "end": {
              "line": 536,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_doLayoutRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 538,
              "column": 2
            },
            "end": {
              "line": 557,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requestBody"
            },
            {
              "name": "resolve"
            },
            {
              "name": "reject"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleLayoutResponse",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 559,
              "column": 2
            },
            "end": {
              "line": 562,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_doDataRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 564,
              "column": 2
            },
            "end": {
              "line": 585,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requestBody"
            },
            {
              "name": "resolve"
            },
            {
              "name": "reject"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleDataResponse",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 587,
              "column": 2
            },
            "end": {
              "line": 600,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_doTextRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 602,
              "column": 2
            },
            "end": {
              "line": 618,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "resolve"
            },
            {
              "name": "reject"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleTextResponse",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 620,
              "column": 2
            },
            "end": {
              "line": 623,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 625,
              "column": 2
            },
            "end": {
              "line": 627,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "functionName"
            },
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleLoading",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 2
            },
            "end": {
              "line": 642,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "layoutLoaded"
            },
            {
              "name": "dataLoaded"
            },
            {
              "name": "textLoaded"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildTreeGrid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 644,
              "column": 2
            },
            "end": {
              "line": 717,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "layoutXml"
            },
            {
              "name": "dataXml"
            },
            {
              "name": "textXml"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleGridRenderFinish",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 719,
              "column": 2
            },
            "end": {
              "line": 724,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "grid"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_filterVisibleResources",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 726,
              "column": 2
            },
            "end": {
              "line": 751,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "grid"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleVisibleResourcesChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 753,
              "column": 2
            },
            "end": {
              "line": 779,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "visibleResources"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getDefaultGrid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 781,
              "column": 2
            },
            "end": {
              "line": 783,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeWarningMessage",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 785,
              "column": 2
            },
            "end": {
              "line": 790,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rowLimit"
            }
          ]
        },
        {
          "name": "_computeOccurenceCount",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 792,
              "column": 2
            },
            "end": {
              "line": 803,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_recalculateRecurrenceButtons",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 805,
              "column": 2
            },
            "end": {
              "line": 812,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 94,
          "column": 9
        },
        "end": {
          "line": 813,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "selected",
          "description": "An array containing the resources\nthat are selected through this component.",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 3
            },
            "end": {
              "line": 156,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "loading",
          "description": "A flag that can notify the user when this\ncomponent is requesting data from the server.",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 3
            },
            "end": {
              "line": 167,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "visible-resources",
          "description": "If this property is set, the availability component will display only the resources that are contained in this array.",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 3
            },
            "end": {
              "line": 174,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "resource-click",
          "description": "Fired every time the user clicks\na resource detail.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "row-limit",
          "description": "Fired when the maximum number of rows to be\ndisplayed is reached.\nThe row limit can be set\nby changing the AVAILABILITY_SECTION_ROW_LIMIT\nin TRIRIGAWEB.properties.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "loading-changed",
          "description": "Fired when the `loading` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-availability"
    }
  ]
}
