{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "triplat-duration-period-counter.js",
      "properties": [
        {
          "name": "value",
          "type": "number | null | undefined",
          "description": "Calculated numeric value for a duration field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "String value to be used for the duration period label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "increaseAriaLabel",
          "type": "string | null | undefined",
          "description": "String value to be used for the increase icon ARIA label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "decreaseAriaLabel",
          "type": "string | null | undefined",
          "description": "String value to be used for the decrease icon ARIA label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed for a value when a value is decreased. If a value is smaller than min, the value will immediately be changed to min.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed for a value when a value is increased. If a value is greater than max, the value will immediately be changed to max.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "loop",
          "type": "boolean | null | undefined",
          "description": "Optional loop when a value is increased or decreased (between min and max). If a value is greater than max, the value will immediately be changed to min.\nIf a value is smaller than min, the value will immediately be changed to max. Requires max value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "disableKeyboardInput",
          "type": "boolean | null | undefined",
          "description": "If true, the keyboard input is disabled and the user can only change the duration by using the minus and plus buttons.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_disableDecrementButton",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "loop"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_disableIncrementButton",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "loop"
            },
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "increaseValue",
          "description": "Increase the value of a duration period by a given step.\nIf max value is set, duration value cannot exceed it.\nIf loop is set and duration value exceeds max, then set duration value to min.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 1
            },
            "end": {
              "line": 168,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "decreaseValue",
          "description": "Decrease the value of a duration period by a given step.\nDuration value cannot be smaller than min (or zero).\nIf loop is set and duration value is smaller than min, then set duration value to max.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 1
            },
            "end": {
              "line": 184,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleEdit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 8
        },
        "end": {
          "line": 197,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "value",
          "description": "Calculated numeric value for a duration field.",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "label",
          "description": "String value to be used for the duration period label.",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "increase-aria-label",
          "description": "String value to be used for the increase icon ARIA label.",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "decrease-aria-label",
          "description": "String value to be used for the decrease icon ARIA label.",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Optional minimum allowed for a value when a value is decreased. If a value is smaller than min, the value will immediately be changed to min.",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "Optional maximum allowed for a value when a value is increased. If a value is greater than max, the value will immediately be changed to max.",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "loop",
          "description": "Optional loop when a value is increased or decreased (between min and max). If a value is greater than max, the value will immediately be changed to min.\nIf a value is smaller than min, the value will immediately be changed to max. Requires max value.",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "step",
          "description": "Amount to add or subtract when incrementing or decrementing.",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "disable-keyboard-input",
          "description": "If true, the keyboard input is disabled and the user can only change the duration by using the minus and plus buttons.",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-duration-period-counter"
    },
    {
      "description": "",
      "summary": "",
      "path": "triplat-duration-picker.js",
      "properties": [
        {
          "name": "yearMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a year value is decreased. If a value is smaller than yearMin, the value will immediately be changed to yearMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 43,
              "column": 3
            },
            "end": {
              "line": 46,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "yearMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a year value is increased. If a value is greater than yearMax, the value will immediately be changed to yearMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 51,
              "column": 3
            },
            "end": {
              "line": 53,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "yearLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the year. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a year value is increased or decreased (between yearMin and yearMax). If a value is greater than yearMax, the value will immediately be changed to yearMin.\nIf a value is smaller than yearMin, the value will immediately be changed to yearMax. Requires yearMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 60,
              "column": 3
            },
            "end": {
              "line": 63,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "yearStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a year value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 68,
              "column": 3
            },
            "end": {
              "line": 71,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "monthMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a month value is decreased. If a value is smaller than monthMin, the value will immediately be changed to monthMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 76,
              "column": 3
            },
            "end": {
              "line": 79,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "monthMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a month value is increased. If a value is greater than monthMax, the value will immediately be changed to monthMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 84,
              "column": 3
            },
            "end": {
              "line": 87,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "11",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "monthLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the month. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a month value is increased or decreased (between monthMin and monthMax). If a value is greater than monthMax, the value will immediately be changed to monthMin.\nIf a value is smaller than monthMin, the value will immediately be changed to monthMax. Requires monthMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 94,
              "column": 3
            },
            "end": {
              "line": 97,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "monthStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a month value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 102,
              "column": 3
            },
            "end": {
              "line": 105,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "weekMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a week value is decreased. If a value is smaller than weekMin, the value will immediately be changed to weekMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 110,
              "column": 3
            },
            "end": {
              "line": 113,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "weekMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a week value is increased. If a value is greater than weekMax, the value will immediately be changed to weekMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 118,
              "column": 3
            },
            "end": {
              "line": 120,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "weekLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the week. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a week value is increased or decreased (between weekMin and weekMax). If a value is greater than weekMax, the value will immediately be changed to weekMin.\nIf a value is smaller than weekMin, the value will immediately be changed to weekMax. Requires weekMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 127,
              "column": 3
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "weekStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a week value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 135,
              "column": 3
            },
            "end": {
              "line": 138,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "dayMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a day value is decreased. If a value is smaller than dayMin, the value will immediately be changed to dayMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 143,
              "column": 3
            },
            "end": {
              "line": 146,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "dayMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a day value is increased. If a value is greater than dayMax, the value will immediately be changed to dayMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 151,
              "column": 3
            },
            "end": {
              "line": 154,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "6",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "dayLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the day. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a day value is increased or decreased (between dayMin and dayMax). If a value is greater than dayMax, the value will immediately be changed to dayMin.\nIf a value is smaller than dayMin, the value will immediately be changed to dayMax. Requires dayMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 161,
              "column": 3
            },
            "end": {
              "line": 164,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "dayStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a day value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 169,
              "column": 3
            },
            "end": {
              "line": 172,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hourMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when an hour value is decreased. If a value is smaller than hourMin, the value will immediately be changed to hourMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 177,
              "column": 3
            },
            "end": {
              "line": 180,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hourMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when an hour value is increased. If a value is greater than hourMax, the value will immediately be changed to hourMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 185,
              "column": 3
            },
            "end": {
              "line": 188,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "23",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hourLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the hour. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when an hour value is increased or decreased (between hourMin and hourMax). If a value is greater than hourMax, the value will immediately be changed to hourMin.\nIf a value is smaller than hourMin, the value will immediately be changed to hourMax. Requires hourMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 195,
              "column": 3
            },
            "end": {
              "line": 198,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hourStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing an hour value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 203,
              "column": 3
            },
            "end": {
              "line": 206,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minuteMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a minute value is decreased. If a value is smaller than minuteMin, the value will immediately be changed to minuteMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 211,
              "column": 3
            },
            "end": {
              "line": 214,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minuteMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a minute value is increased. If a value is greater than minuteMax, the value will immediately be changed to minuteMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 219,
              "column": 3
            },
            "end": {
              "line": 222,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "59",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minuteLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the minute. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a minute value is increased or decreased (between minuteMin and minuteMax). If a value is greater than minuteMax, the value will immediately be changed to minuteMin.\nIf a value is smaller than minuteMin, the value will immediately be changed to minuteMax. Requires minuteMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 229,
              "column": 3
            },
            "end": {
              "line": 232,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minuteStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a minute value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 237,
              "column": 3
            },
            "end": {
              "line": 240,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "secondMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a second value is decreased. If a value is smaller than secondMin, the value will immediately be changed to secondMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 245,
              "column": 3
            },
            "end": {
              "line": 248,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "secondMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a second value is increased. If a value is greater than secondMax, the value will immediately be changed to secondMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 253,
              "column": 3
            },
            "end": {
              "line": 256,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "59",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "secondLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the second. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a second value is increased or decreased (between secondMin and secondMax). If a value is greater than secondMax, the value will immediately be changed to secondMin.\nIf a value is smaller than secondMin, the value will immediately be changed to secondMax. Requires secondMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 263,
              "column": 3
            },
            "end": {
              "line": 266,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "secondStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a second value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 271,
              "column": 3
            },
            "end": {
              "line": 274,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecondMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a millisecond value is decreased. If a value is smaller than millisecondMin, the value will immediately be changed to millisecondMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 279,
              "column": 3
            },
            "end": {
              "line": 282,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecondMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a millisecond value is increased. If a value is greater than millisecondMax, the value will immediately be changed to millisecondMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 287,
              "column": 3
            },
            "end": {
              "line": 290,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "999",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecondLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the millisecond. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a millisecond value is increased or decreased (between millisecondMin and millisecondMax). If a value is greater than millisecondMax, the value will immediately be changed to millisecondMin.\nIf a value is smaller than millisecondMin, the value will immediately be changed to millisecondMax. Requires millisecondMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 297,
              "column": 3
            },
            "end": {
              "line": 300,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecondStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a millisecond value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 305,
              "column": 3
            },
            "end": {
              "line": 308,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "value",
          "type": "number | null | undefined",
          "description": "Calculated numeric value for a duration field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 170,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "displayTokens",
          "type": "string | null | undefined",
          "description": "String value to indicate which duration periods to display.\nAvailable duration periods are: <br>\ny - year <br>\nM - month <br>\nw - week <br>\nd - day <br>\nh - hour <br>\nm - minute <br>\ns - second <br>\nS - millisecond",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 187,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"y:M:w:d:h:m:s\""
        },
        {
          "name": "invalidInput",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 2
            },
            "end": {
              "line": 191,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 196,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "week",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 204,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 2
            },
            "end": {
              "line": 220,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        }
      ],
      "methods": [
        {
          "name": "formatDisplayedDuration",
          "description": "Return a formatted string duration to display (periods and values).\nOnly duration periods that have a value will be displayed.\nEach duration period is followed by its period label (adjust to singular/plural).",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 317,
              "column": 1
            },
            "end": {
              "line": 334,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayedDuration"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "addDisplayedPeriod",
          "description": "Return a string duration to display a given period.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 340,
              "column": 1
            },
            "end": {
              "line": 358,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "periodValue"
            },
            {
              "name": "period"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "getDisplayedDuration",
          "description": "Process the numeric duration value and return an object that contains the duration values.\nOnly duration values that are part of the duration displayToken are returned.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 364,
              "column": 1
            },
            "end": {
              "line": 422,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationValue"
            },
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "handleDurationValueForNonDisplayedMonths",
          "description": "Return an adjusted duration value (if the month was removed).",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 427,
              "column": 2
            },
            "end": {
              "line": 435,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationValue"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "calculateDurationValue",
          "description": "Return a numeric calculated duration value for a given duration object.\nThis is the numeric value that can be saved.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 441,
              "column": 2
            },
            "end": {
              "line": 464,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "periods"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isLoop",
          "description": "Return true if the loop value is 1, and return false if it is 0. Otherwise, keep the default loop setting.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 469,
              "column": 2
            },
            "end": {
              "line": 477,
              "column": 4
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "loopValue"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isNumericPositiveValue",
          "description": "Return true if the value is numeric and positive. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 482,
              "column": 2
            },
            "end": {
              "line": 488,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayYears",
          "description": "Return true if the given display tokens include the symbol for the year. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 493,
              "column": 2
            },
            "end": {
              "line": 495,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayMonths",
          "description": "Return true if the given display tokens include the symbol for the month. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 500,
              "column": 2
            },
            "end": {
              "line": 502,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayWeeks",
          "description": "Return true if the given display tokens include the symbol for the week. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 507,
              "column": 2
            },
            "end": {
              "line": 509,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayDays",
          "description": "Return true if the given display tokens include the symbol for the day. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 514,
              "column": 2
            },
            "end": {
              "line": 516,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayHours",
          "description": "Return true if the given display tokens include the symbol for the hour. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 521,
              "column": 2
            },
            "end": {
              "line": 523,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayMinutes",
          "description": "Return true if the given display tokens include the symbol for the minute. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 528,
              "column": 2
            },
            "end": {
              "line": 530,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplaySeconds",
          "description": "Return true if the given display tokens include the symbol for the second. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 535,
              "column": 2
            },
            "end": {
              "line": 537,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayMilliseconds",
          "description": "Return true if the given display tokens include the symbol for the millisecond. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 542,
              "column": 2
            },
            "end": {
              "line": 544,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "handleTranslation",
          "description": "Return a translated period label.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 549,
              "column": 2
            },
            "end": {
              "line": 586,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationPeriod"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 4
            },
            "end": {
              "line": 275,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "openPicker",
          "description": "Open the duration dialog and set the duration values.\nIf duration values exist, the dialog displays the duration values. Otherwise, duration values are set to zero.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 1
            },
            "end": {
              "line": 309,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleCancel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleOk",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleEdit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_rollup",
          "description": "Optimizes and rollup periods values (if possible).\nDoes not rollup weeks to months, or days to months.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 1
            },
            "end": {
              "line": 406,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 8
        },
        "end": {
          "line": 407,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "year-min",
          "description": "Optional minimum allowed when a year value is decreased. If a value is smaller than yearMin, the value will immediately be changed to yearMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 43,
              "column": 3
            },
            "end": {
              "line": 46,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "year-max",
          "description": "Optional maximum allowed when a year value is increased. If a value is greater than yearMax, the value will immediately be changed to yearMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 51,
              "column": 3
            },
            "end": {
              "line": 53,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "year-loop",
          "description": "Optional looping functionality for the year. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a year value is increased or decreased (between yearMin and yearMax). If a value is greater than yearMax, the value will immediately be changed to yearMin.\nIf a value is smaller than yearMin, the value will immediately be changed to yearMax. Requires yearMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 60,
              "column": 3
            },
            "end": {
              "line": 63,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "year-step",
          "description": "Amount to add or subtract when incrementing or decrementing a year value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 68,
              "column": 3
            },
            "end": {
              "line": 71,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "month-min",
          "description": "Optional minimum allowed when a month value is decreased. If a value is smaller than monthMin, the value will immediately be changed to monthMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 76,
              "column": 3
            },
            "end": {
              "line": 79,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "month-max",
          "description": "Optional maximum allowed when a month value is increased. If a value is greater than monthMax, the value will immediately be changed to monthMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 84,
              "column": 3
            },
            "end": {
              "line": 87,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "month-loop",
          "description": "Optional looping functionality for the month. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a month value is increased or decreased (between monthMin and monthMax). If a value is greater than monthMax, the value will immediately be changed to monthMin.\nIf a value is smaller than monthMin, the value will immediately be changed to monthMax. Requires monthMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 94,
              "column": 3
            },
            "end": {
              "line": 97,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "month-step",
          "description": "Amount to add or subtract when incrementing or decrementing a month value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 102,
              "column": 3
            },
            "end": {
              "line": 105,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "week-min",
          "description": "Optional minimum allowed when a week value is decreased. If a value is smaller than weekMin, the value will immediately be changed to weekMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 110,
              "column": 3
            },
            "end": {
              "line": 113,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "week-max",
          "description": "Optional maximum allowed when a week value is increased. If a value is greater than weekMax, the value will immediately be changed to weekMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 118,
              "column": 3
            },
            "end": {
              "line": 120,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "week-loop",
          "description": "Optional looping functionality for the week. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a week value is increased or decreased (between weekMin and weekMax). If a value is greater than weekMax, the value will immediately be changed to weekMin.\nIf a value is smaller than weekMin, the value will immediately be changed to weekMax. Requires weekMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 127,
              "column": 3
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "week-step",
          "description": "Amount to add or subtract when incrementing or decrementing a week value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 135,
              "column": 3
            },
            "end": {
              "line": 138,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "day-min",
          "description": "Optional minimum allowed when a day value is decreased. If a value is smaller than dayMin, the value will immediately be changed to dayMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 143,
              "column": 3
            },
            "end": {
              "line": 146,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "day-max",
          "description": "Optional maximum allowed when a day value is increased. If a value is greater than dayMax, the value will immediately be changed to dayMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 151,
              "column": 3
            },
            "end": {
              "line": 154,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "day-loop",
          "description": "Optional looping functionality for the day. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a day value is increased or decreased (between dayMin and dayMax). If a value is greater than dayMax, the value will immediately be changed to dayMin.\nIf a value is smaller than dayMin, the value will immediately be changed to dayMax. Requires dayMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 161,
              "column": 3
            },
            "end": {
              "line": 164,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "day-step",
          "description": "Amount to add or subtract when incrementing or decrementing a day value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 169,
              "column": 3
            },
            "end": {
              "line": 172,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hour-min",
          "description": "Optional minimum allowed when an hour value is decreased. If a value is smaller than hourMin, the value will immediately be changed to hourMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 177,
              "column": 3
            },
            "end": {
              "line": 180,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hour-max",
          "description": "Optional maximum allowed when an hour value is increased. If a value is greater than hourMax, the value will immediately be changed to hourMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 185,
              "column": 3
            },
            "end": {
              "line": 188,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hour-loop",
          "description": "Optional looping functionality for the hour. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when an hour value is increased or decreased (between hourMin and hourMax). If a value is greater than hourMax, the value will immediately be changed to hourMin.\nIf a value is smaller than hourMin, the value will immediately be changed to hourMax. Requires hourMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 195,
              "column": 3
            },
            "end": {
              "line": 198,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hour-step",
          "description": "Amount to add or subtract when incrementing or decrementing an hour value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 203,
              "column": 3
            },
            "end": {
              "line": 206,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minute-min",
          "description": "Optional minimum allowed when a minute value is decreased. If a value is smaller than minuteMin, the value will immediately be changed to minuteMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 211,
              "column": 3
            },
            "end": {
              "line": 214,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minute-max",
          "description": "Optional maximum allowed when a minute value is increased. If a value is greater than minuteMax, the value will immediately be changed to minuteMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 219,
              "column": 3
            },
            "end": {
              "line": 222,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minute-loop",
          "description": "Optional looping functionality for the minute. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a minute value is increased or decreased (between minuteMin and minuteMax). If a value is greater than minuteMax, the value will immediately be changed to minuteMin.\nIf a value is smaller than minuteMin, the value will immediately be changed to minuteMax. Requires minuteMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 229,
              "column": 3
            },
            "end": {
              "line": 232,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minute-step",
          "description": "Amount to add or subtract when incrementing or decrementing a minute value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 237,
              "column": 3
            },
            "end": {
              "line": 240,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "second-min",
          "description": "Optional minimum allowed when a second value is decreased. If a value is smaller than secondMin, the value will immediately be changed to secondMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 245,
              "column": 3
            },
            "end": {
              "line": 248,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "second-max",
          "description": "Optional maximum allowed when a second value is increased. If a value is greater than secondMax, the value will immediately be changed to secondMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 253,
              "column": 3
            },
            "end": {
              "line": 256,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "second-loop",
          "description": "Optional looping functionality for the second. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a second value is increased or decreased (between secondMin and secondMax). If a value is greater than secondMax, the value will immediately be changed to secondMin.\nIf a value is smaller than secondMin, the value will immediately be changed to secondMax. Requires secondMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 263,
              "column": 3
            },
            "end": {
              "line": 266,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "second-step",
          "description": "Amount to add or subtract when incrementing or decrementing a second value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 271,
              "column": 3
            },
            "end": {
              "line": 274,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecond-min",
          "description": "Optional minimum allowed when a millisecond value is decreased. If a value is smaller than millisecondMin, the value will immediately be changed to millisecondMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 279,
              "column": 3
            },
            "end": {
              "line": 282,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecond-max",
          "description": "Optional maximum allowed when a millisecond value is increased. If a value is greater than millisecondMax, the value will immediately be changed to millisecondMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 287,
              "column": 3
            },
            "end": {
              "line": 290,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecond-loop",
          "description": "Optional looping functionality for the millisecond. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a millisecond value is increased or decreased (between millisecondMin and millisecondMax). If a value is greater than millisecondMax, the value will immediately be changed to millisecondMin.\nIf a value is smaller than millisecondMin, the value will immediately be changed to millisecondMax. Requires millisecondMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 297,
              "column": 3
            },
            "end": {
              "line": 300,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecond-step",
          "description": "Amount to add or subtract when incrementing or decrementing a millisecond value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 305,
              "column": 3
            },
            "end": {
              "line": 308,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "value",
          "description": "Calculated numeric value for a duration field.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 170,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "display-tokens",
          "description": "String value to indicate which duration periods to display.\nAvailable duration periods are: <br>\ny - year <br>\nM - month <br>\nw - week <br>\nd - day <br>\nh - hour <br>\nm - minute <br>\ns - second <br>\nS - millisecond",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 187,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "invalid-input",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 2
            },
            "end": {
              "line": 191,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "year",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 196,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "month",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "week",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 204,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "day",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "hour",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "minute",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "second",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 2
            },
            "end": {
              "line": 220,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "millisecond",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-duration-picker"
    },
    {
      "description": "A component that accepts a numeric duration value and transforms it into a readable formatted string. The component \nprovides an input box with a duration icon. The input box is read-only and displays the duration periods and values. Clicking on the icon \nbrings up a duration dialog and allows you to change the duration values. Once the new values are selected, a new numeric\nduration value is generated so it can be saved. \n\nThe duration periods are configurable. By default, the years, months, weeks, days, hours, minutes and seconds are displayed. \n\n\t<triplat-duration value=\"{{value}}\"></triplat-duration>\n\nExample of using a label and displaying year, month, and day. \n\n\t<triplat-duration \n\t  value=\"{{value}}\" \n\t  label=\"Duration\" \n\t  display-tokens=\"y:M:d\"></triplat-duration>\n\nThe duration periods have default settings for minimum and maximum value, increase and decrease step, and looping functionality (see the default settings for each period below).\nIf needed, these default settings can be modified. Here is an example of modifying the default settings for the year, month, and minute. The year is set with a maximum value of 5 and looping enabled (1). The month \nis set with looping disabled (0). The minute is set with an increase and decrease step of 15.\n\n\t<triplat-duration \n\t  value=\"{{value}}\" \n\t  label=\"Duration\" \n\t  year-max=5\n\t  year-loop=1\n\t  month-loop=0\n\t  minute-step=15></triplat-duration>\n\nExample of using custom label. In order for an element to be considered as a label, it must have the `label` slot.\n\n\t<triplat-duration value=\"{{value}}\">\n\t  <iron-icon slot=\"label\" icon=\"icons:hourglass-empty\"></iron-icon>\n\t  <span slot=\"label\">Duration</span>\n\t</triplat-duration>\n\nNote: The 'label' property value will be overridden when using a custom 'label'. <br/>\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--triplat-duration-width` | Width of the duration field | `100%`\n`--triplat-duration-clock-time-icon` | Mixin applied to the clock icon | `{color: var(--tri-primary-color); background-color: white; cursor: pointer;}`\n`--triplat-duration-period-counter-icon` | Mixin applied to the decrease and increase icons | `{color: var(--tri-primary-color); background-color: white; cursor: pointer;}`\n`--triplat-duration-done-button` | Mixin applied to the done button | `{}`\n`--triplat-duration-cancel-button` | Mixin applied to the cancel button | `{}`",
      "summary": "",
      "path": "triplat-duration.js",
      "properties": [
        {
          "name": "yearMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a year value is decreased. If a value is smaller than yearMin, the value will immediately be changed to yearMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 43,
              "column": 3
            },
            "end": {
              "line": 46,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "yearMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a year value is increased. If a value is greater than yearMax, the value will immediately be changed to yearMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 51,
              "column": 3
            },
            "end": {
              "line": 53,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "yearLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the year. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a year value is increased or decreased (between yearMin and yearMax). If a value is greater than yearMax, the value will immediately be changed to yearMin.\nIf a value is smaller than yearMin, the value will immediately be changed to yearMax. Requires yearMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 60,
              "column": 3
            },
            "end": {
              "line": 63,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "yearStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a year value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 68,
              "column": 3
            },
            "end": {
              "line": 71,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "monthMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a month value is decreased. If a value is smaller than monthMin, the value will immediately be changed to monthMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 76,
              "column": 3
            },
            "end": {
              "line": 79,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "monthMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a month value is increased. If a value is greater than monthMax, the value will immediately be changed to monthMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 84,
              "column": 3
            },
            "end": {
              "line": 87,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "11",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "monthLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the month. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a month value is increased or decreased (between monthMin and monthMax). If a value is greater than monthMax, the value will immediately be changed to monthMin.\nIf a value is smaller than monthMin, the value will immediately be changed to monthMax. Requires monthMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 94,
              "column": 3
            },
            "end": {
              "line": 97,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "monthStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a month value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 102,
              "column": 3
            },
            "end": {
              "line": 105,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "weekMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a week value is decreased. If a value is smaller than weekMin, the value will immediately be changed to weekMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 110,
              "column": 3
            },
            "end": {
              "line": 113,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "weekMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a week value is increased. If a value is greater than weekMax, the value will immediately be changed to weekMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 118,
              "column": 3
            },
            "end": {
              "line": 120,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "weekLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the week. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a week value is increased or decreased (between weekMin and weekMax). If a value is greater than weekMax, the value will immediately be changed to weekMin.\nIf a value is smaller than weekMin, the value will immediately be changed to weekMax. Requires weekMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 127,
              "column": 3
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "weekStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a week value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 135,
              "column": 3
            },
            "end": {
              "line": 138,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "dayMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a day value is decreased. If a value is smaller than dayMin, the value will immediately be changed to dayMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 143,
              "column": 3
            },
            "end": {
              "line": 146,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "dayMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a day value is increased. If a value is greater than dayMax, the value will immediately be changed to dayMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 151,
              "column": 3
            },
            "end": {
              "line": 154,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "6",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "dayLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the day. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a day value is increased or decreased (between dayMin and dayMax). If a value is greater than dayMax, the value will immediately be changed to dayMin.\nIf a value is smaller than dayMin, the value will immediately be changed to dayMax. Requires dayMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 161,
              "column": 3
            },
            "end": {
              "line": 164,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "dayStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a day value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 169,
              "column": 3
            },
            "end": {
              "line": 172,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hourMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when an hour value is decreased. If a value is smaller than hourMin, the value will immediately be changed to hourMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 177,
              "column": 3
            },
            "end": {
              "line": 180,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hourMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when an hour value is increased. If a value is greater than hourMax, the value will immediately be changed to hourMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 185,
              "column": 3
            },
            "end": {
              "line": 188,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "23",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hourLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the hour. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when an hour value is increased or decreased (between hourMin and hourMax). If a value is greater than hourMax, the value will immediately be changed to hourMin.\nIf a value is smaller than hourMin, the value will immediately be changed to hourMax. Requires hourMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 195,
              "column": 3
            },
            "end": {
              "line": 198,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hourStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing an hour value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 203,
              "column": 3
            },
            "end": {
              "line": 206,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minuteMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a minute value is decreased. If a value is smaller than minuteMin, the value will immediately be changed to minuteMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 211,
              "column": 3
            },
            "end": {
              "line": 214,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minuteMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a minute value is increased. If a value is greater than minuteMax, the value will immediately be changed to minuteMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 219,
              "column": 3
            },
            "end": {
              "line": 222,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "59",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minuteLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the minute. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a minute value is increased or decreased (between minuteMin and minuteMax). If a value is greater than minuteMax, the value will immediately be changed to minuteMin.\nIf a value is smaller than minuteMin, the value will immediately be changed to minuteMax. Requires minuteMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 229,
              "column": 3
            },
            "end": {
              "line": 232,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minuteStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a minute value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 237,
              "column": 3
            },
            "end": {
              "line": 240,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "secondMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a second value is decreased. If a value is smaller than secondMin, the value will immediately be changed to secondMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 245,
              "column": 3
            },
            "end": {
              "line": 248,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "secondMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a second value is increased. If a value is greater than secondMax, the value will immediately be changed to secondMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 253,
              "column": 3
            },
            "end": {
              "line": 256,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "59",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "secondLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the second. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a second value is increased or decreased (between secondMin and secondMax). If a value is greater than secondMax, the value will immediately be changed to secondMin.\nIf a value is smaller than secondMin, the value will immediately be changed to secondMax. Requires secondMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 263,
              "column": 3
            },
            "end": {
              "line": 266,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "secondStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a second value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 271,
              "column": 3
            },
            "end": {
              "line": 274,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecondMin",
          "type": "number | null | undefined",
          "description": "Optional minimum allowed when a millisecond value is decreased. If a value is smaller than millisecondMin, the value will immediately be changed to millisecondMin.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 279,
              "column": 3
            },
            "end": {
              "line": 282,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecondMax",
          "type": "number | null | undefined",
          "description": "Optional maximum allowed when a millisecond value is increased. If a value is greater than millisecondMax, the value will immediately be changed to millisecondMax.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 287,
              "column": 3
            },
            "end": {
              "line": 290,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "999",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecondLoop",
          "type": "number | null | undefined",
          "description": "Optional looping functionality for the millisecond. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a millisecond value is increased or decreased (between millisecondMin and millisecondMax). If a value is greater than millisecondMax, the value will immediately be changed to millisecondMin.\nIf a value is smaller than millisecondMin, the value will immediately be changed to millisecondMax. Requires millisecondMax value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 297,
              "column": 3
            },
            "end": {
              "line": 300,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecondStep",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when incrementing or decrementing a millisecond value.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 305,
              "column": 3
            },
            "end": {
              "line": 308,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "value",
          "type": "number | null | undefined",
          "description": "Calculated numeric value for a duration field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "String value to be used for the duration label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "displayTokens",
          "type": "string | null | undefined",
          "description": "String value to indicate which duration periods to display.\nAvailable duration periods are: <br>\ny - year <br>\nM - month <br>\nw - week <br>\nd - day <br>\nh - hour <br>\nm - minute <br>\ns - second <br>\nS - millisecond",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "notify": false,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"y:M:w:d:h:m:s\""
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Boolean value to indicate that this is a read-only duration value. Show\nthe value, but not the duration picker icon.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "noLabelFloat",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable the floating label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "noUnderline",
          "type": "boolean | null | undefined",
          "description": "Set to true to remove the underline.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 2
            },
            "end": {
              "line": 211,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "formatDisplayedDuration",
          "description": "Return a formatted string duration to display (periods and values).\nOnly duration periods that have a value will be displayed.\nEach duration period is followed by its period label (adjust to singular/plural).",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 317,
              "column": 1
            },
            "end": {
              "line": 334,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayedDuration"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "addDisplayedPeriod",
          "description": "Return a string duration to display a given period.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 340,
              "column": 1
            },
            "end": {
              "line": 358,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "periodValue"
            },
            {
              "name": "period"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "getDisplayedDuration",
          "description": "Process the numeric duration value and return an object that contains the duration values.\nOnly duration values that are part of the duration displayToken are returned.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 364,
              "column": 1
            },
            "end": {
              "line": 422,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationValue"
            },
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "handleDurationValueForNonDisplayedMonths",
          "description": "Return an adjusted duration value (if the month was removed).",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 427,
              "column": 2
            },
            "end": {
              "line": 435,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationValue"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "calculateDurationValue",
          "description": "Return a numeric calculated duration value for a given duration object.\nThis is the numeric value that can be saved.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 441,
              "column": 2
            },
            "end": {
              "line": 464,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "periods"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isLoop",
          "description": "Return true if the loop value is 1, and return false if it is 0. Otherwise, keep the default loop setting.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 469,
              "column": 2
            },
            "end": {
              "line": 477,
              "column": 4
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "loopValue"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isNumericPositiveValue",
          "description": "Return true if the value is numeric and positive. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 482,
              "column": 2
            },
            "end": {
              "line": 488,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayYears",
          "description": "Return true if the given display tokens include the symbol for the year. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 493,
              "column": 2
            },
            "end": {
              "line": 495,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayMonths",
          "description": "Return true if the given display tokens include the symbol for the month. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 500,
              "column": 2
            },
            "end": {
              "line": 502,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayWeeks",
          "description": "Return true if the given display tokens include the symbol for the week. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 507,
              "column": 2
            },
            "end": {
              "line": 509,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayDays",
          "description": "Return true if the given display tokens include the symbol for the day. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 514,
              "column": 2
            },
            "end": {
              "line": 516,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayHours",
          "description": "Return true if the given display tokens include the symbol for the hour. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 521,
              "column": 2
            },
            "end": {
              "line": 523,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayMinutes",
          "description": "Return true if the given display tokens include the symbol for the minute. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 528,
              "column": 2
            },
            "end": {
              "line": 530,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplaySeconds",
          "description": "Return true if the given display tokens include the symbol for the second. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 535,
              "column": 2
            },
            "end": {
              "line": 537,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "isDisplayMilliseconds",
          "description": "Return true if the given display tokens include the symbol for the millisecond. Otherwise, return false.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 542,
              "column": 2
            },
            "end": {
              "line": 544,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayTokens"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "handleTranslation",
          "description": "Return a translated period label.",
          "privacy": "public",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 549,
              "column": 2
            },
            "end": {
              "line": 586,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationPeriod"
            }
          ],
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openDurationPicker",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openInNonMobileDevice",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationPicker"
            },
            {
              "name": "durationPickerButton"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openInMobileDevice",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationPicker"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleTriplatDurationPickerPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 291,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_top"
            },
            {
              "name": "_left"
            },
            {
              "name": "_position"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isMobileDevice",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 2
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_displayValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "durationValue"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 4
            },
            "end": {
              "line": 325,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_keyPressHandlerOpenDuration",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 333,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getCalculatedEndDateTime",
          "description": "Return a calculated end datetime for a given start datetime by adding the current duration periods.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 1
            },
            "end": {
              "line": 373,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "startDateTime"
            }
          ]
        },
        {
          "name": "_setPickerAriaLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 4
            },
            "end": {
              "line": 385,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "_handleBrowserResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 71,
          "column": 8
        },
        "end": {
          "line": 393,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "year-min",
          "description": "Optional minimum allowed when a year value is decreased. If a value is smaller than yearMin, the value will immediately be changed to yearMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 43,
              "column": 3
            },
            "end": {
              "line": 46,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "year-max",
          "description": "Optional maximum allowed when a year value is increased. If a value is greater than yearMax, the value will immediately be changed to yearMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 51,
              "column": 3
            },
            "end": {
              "line": 53,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "year-loop",
          "description": "Optional looping functionality for the year. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a year value is increased or decreased (between yearMin and yearMax). If a value is greater than yearMax, the value will immediately be changed to yearMin.\nIf a value is smaller than yearMin, the value will immediately be changed to yearMax. Requires yearMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 60,
              "column": 3
            },
            "end": {
              "line": 63,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "year-step",
          "description": "Amount to add or subtract when incrementing or decrementing a year value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 68,
              "column": 3
            },
            "end": {
              "line": 71,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "month-min",
          "description": "Optional minimum allowed when a month value is decreased. If a value is smaller than monthMin, the value will immediately be changed to monthMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 76,
              "column": 3
            },
            "end": {
              "line": 79,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "month-max",
          "description": "Optional maximum allowed when a month value is increased. If a value is greater than monthMax, the value will immediately be changed to monthMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 84,
              "column": 3
            },
            "end": {
              "line": 87,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "month-loop",
          "description": "Optional looping functionality for the month. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a month value is increased or decreased (between monthMin and monthMax). If a value is greater than monthMax, the value will immediately be changed to monthMin.\nIf a value is smaller than monthMin, the value will immediately be changed to monthMax. Requires monthMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 94,
              "column": 3
            },
            "end": {
              "line": 97,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "month-step",
          "description": "Amount to add or subtract when incrementing or decrementing a month value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 102,
              "column": 3
            },
            "end": {
              "line": 105,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "week-min",
          "description": "Optional minimum allowed when a week value is decreased. If a value is smaller than weekMin, the value will immediately be changed to weekMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 110,
              "column": 3
            },
            "end": {
              "line": 113,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "week-max",
          "description": "Optional maximum allowed when a week value is increased. If a value is greater than weekMax, the value will immediately be changed to weekMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 118,
              "column": 3
            },
            "end": {
              "line": 120,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "week-loop",
          "description": "Optional looping functionality for the week. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a week value is increased or decreased (between weekMin and weekMax). If a value is greater than weekMax, the value will immediately be changed to weekMin.\nIf a value is smaller than weekMin, the value will immediately be changed to weekMax. Requires weekMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 127,
              "column": 3
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "week-step",
          "description": "Amount to add or subtract when incrementing or decrementing a week value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 135,
              "column": 3
            },
            "end": {
              "line": 138,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "day-min",
          "description": "Optional minimum allowed when a day value is decreased. If a value is smaller than dayMin, the value will immediately be changed to dayMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 143,
              "column": 3
            },
            "end": {
              "line": 146,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "day-max",
          "description": "Optional maximum allowed when a day value is increased. If a value is greater than dayMax, the value will immediately be changed to dayMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 151,
              "column": 3
            },
            "end": {
              "line": 154,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "day-loop",
          "description": "Optional looping functionality for the day. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a day value is increased or decreased (between dayMin and dayMax). If a value is greater than dayMax, the value will immediately be changed to dayMin.\nIf a value is smaller than dayMin, the value will immediately be changed to dayMax. Requires dayMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 161,
              "column": 3
            },
            "end": {
              "line": 164,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "day-step",
          "description": "Amount to add or subtract when incrementing or decrementing a day value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 169,
              "column": 3
            },
            "end": {
              "line": 172,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hour-min",
          "description": "Optional minimum allowed when an hour value is decreased. If a value is smaller than hourMin, the value will immediately be changed to hourMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 177,
              "column": 3
            },
            "end": {
              "line": 180,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hour-max",
          "description": "Optional maximum allowed when an hour value is increased. If a value is greater than hourMax, the value will immediately be changed to hourMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 185,
              "column": 3
            },
            "end": {
              "line": 188,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hour-loop",
          "description": "Optional looping functionality for the hour. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when an hour value is increased or decreased (between hourMin and hourMax). If a value is greater than hourMax, the value will immediately be changed to hourMin.\nIf a value is smaller than hourMin, the value will immediately be changed to hourMax. Requires hourMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 195,
              "column": 3
            },
            "end": {
              "line": 198,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "hour-step",
          "description": "Amount to add or subtract when incrementing or decrementing an hour value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 203,
              "column": 3
            },
            "end": {
              "line": 206,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minute-min",
          "description": "Optional minimum allowed when a minute value is decreased. If a value is smaller than minuteMin, the value will immediately be changed to minuteMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 211,
              "column": 3
            },
            "end": {
              "line": 214,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minute-max",
          "description": "Optional maximum allowed when a minute value is increased. If a value is greater than minuteMax, the value will immediately be changed to minuteMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 219,
              "column": 3
            },
            "end": {
              "line": 222,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minute-loop",
          "description": "Optional looping functionality for the minute. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a minute value is increased or decreased (between minuteMin and minuteMax). If a value is greater than minuteMax, the value will immediately be changed to minuteMin.\nIf a value is smaller than minuteMin, the value will immediately be changed to minuteMax. Requires minuteMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 229,
              "column": 3
            },
            "end": {
              "line": 232,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "minute-step",
          "description": "Amount to add or subtract when incrementing or decrementing a minute value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 237,
              "column": 3
            },
            "end": {
              "line": 240,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "second-min",
          "description": "Optional minimum allowed when a second value is decreased. If a value is smaller than secondMin, the value will immediately be changed to secondMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 245,
              "column": 3
            },
            "end": {
              "line": 248,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "second-max",
          "description": "Optional maximum allowed when a second value is increased. If a value is greater than secondMax, the value will immediately be changed to secondMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 253,
              "column": 3
            },
            "end": {
              "line": 256,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "second-loop",
          "description": "Optional looping functionality for the second. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a second value is increased or decreased (between secondMin and secondMax). If a value is greater than secondMax, the value will immediately be changed to secondMin.\nIf a value is smaller than secondMin, the value will immediately be changed to secondMax. Requires secondMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 263,
              "column": 3
            },
            "end": {
              "line": 266,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "second-step",
          "description": "Amount to add or subtract when incrementing or decrementing a second value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 271,
              "column": 3
            },
            "end": {
              "line": 274,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecond-min",
          "description": "Optional minimum allowed when a millisecond value is decreased. If a value is smaller than millisecondMin, the value will immediately be changed to millisecondMin.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 279,
              "column": 3
            },
            "end": {
              "line": 282,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecond-max",
          "description": "Optional maximum allowed when a millisecond value is increased. If a value is greater than millisecondMax, the value will immediately be changed to millisecondMax.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 287,
              "column": 3
            },
            "end": {
              "line": 290,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecond-loop",
          "description": "Optional looping functionality for the millisecond. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a millisecond value is increased or decreased (between millisecondMin and millisecondMax). If a value is greater than millisecondMax, the value will immediately be changed to millisecondMin.\nIf a value is smaller than millisecondMin, the value will immediately be changed to millisecondMax. Requires millisecondMax value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 297,
              "column": 3
            },
            "end": {
              "line": 300,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "millisecond-step",
          "description": "Amount to add or subtract when incrementing or decrementing a millisecond value.",
          "sourceRange": {
            "file": "triplat-duration-behavior.js",
            "start": {
              "line": 305,
              "column": 3
            },
            "end": {
              "line": 308,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "TriPlatDurationBehavior"
        },
        {
          "name": "value",
          "description": "Calculated numeric value for a duration field.",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "label",
          "description": "String value to be used for the duration label.",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "display-tokens",
          "description": "String value to indicate which duration periods to display.\nAvailable duration periods are: <br>\ny - year <br>\nM - month <br>\nw - week <br>\nd - day <br>\nh - hour <br>\nm - minute <br>\ns - second <br>\nS - millisecond",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Boolean value to indicate that this is a read-only duration value. Show\nthe value, but not the duration picker icon.",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label.",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-underline",
          "description": "Set to true to remove the underline.",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 2
            },
            "end": {
              "line": 211,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "triplat-duration-change",
          "description": "Fired after a duration value change.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-duration"
    }
  ],
  "metadata": {
    "polymer": {
      "behaviors": [
        {
          "description": "A behavior to support duration.",
          "summary": "",
          "path": "triplat-duration-behavior.js",
          "properties": [
            {
              "name": "yearMin",
              "type": "number | null | undefined",
              "description": "Optional minimum allowed when a year value is decreased. If a value is smaller than yearMin, the value will immediately be changed to yearMin.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 43,
                  "column": 3
                },
                "end": {
                  "line": 46,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "yearMax",
              "type": "number | null | undefined",
              "description": "Optional maximum allowed when a year value is increased. If a value is greater than yearMax, the value will immediately be changed to yearMax.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 51,
                  "column": 3
                },
                "end": {
                  "line": 53,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              }
            },
            {
              "name": "yearLoop",
              "type": "number | null | undefined",
              "description": "Optional looping functionality for the year. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a year value is increased or decreased (between yearMin and yearMax). If a value is greater than yearMax, the value will immediately be changed to yearMin.\nIf a value is smaller than yearMin, the value will immediately be changed to yearMax. Requires yearMax value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 60,
                  "column": 3
                },
                "end": {
                  "line": 63,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "yearStep",
              "type": "number | null | undefined",
              "description": "Amount to add or subtract when incrementing or decrementing a year value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 68,
                  "column": 3
                },
                "end": {
                  "line": 71,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "monthMin",
              "type": "number | null | undefined",
              "description": "Optional minimum allowed when a month value is decreased. If a value is smaller than monthMin, the value will immediately be changed to monthMin.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 3
                },
                "end": {
                  "line": 79,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "monthMax",
              "type": "number | null | undefined",
              "description": "Optional maximum allowed when a month value is increased. If a value is greater than monthMax, the value will immediately be changed to monthMax.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 84,
                  "column": 3
                },
                "end": {
                  "line": 87,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "11"
            },
            {
              "name": "monthLoop",
              "type": "number | null | undefined",
              "description": "Optional looping functionality for the month. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a month value is increased or decreased (between monthMin and monthMax). If a value is greater than monthMax, the value will immediately be changed to monthMin.\nIf a value is smaller than monthMin, the value will immediately be changed to monthMax. Requires monthMax value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 3
                },
                "end": {
                  "line": 97,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "monthStep",
              "type": "number | null | undefined",
              "description": "Amount to add or subtract when incrementing or decrementing a month value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 102,
                  "column": 3
                },
                "end": {
                  "line": 105,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "weekMin",
              "type": "number | null | undefined",
              "description": "Optional minimum allowed when a week value is decreased. If a value is smaller than weekMin, the value will immediately be changed to weekMin.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 3
                },
                "end": {
                  "line": 113,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "weekMax",
              "type": "number | null | undefined",
              "description": "Optional maximum allowed when a week value is increased. If a value is greater than weekMax, the value will immediately be changed to weekMax.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 3
                },
                "end": {
                  "line": 120,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              }
            },
            {
              "name": "weekLoop",
              "type": "number | null | undefined",
              "description": "Optional looping functionality for the week. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a week value is increased or decreased (between weekMin and weekMax). If a value is greater than weekMax, the value will immediately be changed to weekMin.\nIf a value is smaller than weekMin, the value will immediately be changed to weekMax. Requires weekMax value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 127,
                  "column": 3
                },
                "end": {
                  "line": 130,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "weekStep",
              "type": "number | null | undefined",
              "description": "Amount to add or subtract when incrementing or decrementing a week value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 135,
                  "column": 3
                },
                "end": {
                  "line": 138,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "dayMin",
              "type": "number | null | undefined",
              "description": "Optional minimum allowed when a day value is decreased. If a value is smaller than dayMin, the value will immediately be changed to dayMin.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 143,
                  "column": 3
                },
                "end": {
                  "line": 146,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "dayMax",
              "type": "number | null | undefined",
              "description": "Optional maximum allowed when a day value is increased. If a value is greater than dayMax, the value will immediately be changed to dayMax.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 151,
                  "column": 3
                },
                "end": {
                  "line": 154,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "6"
            },
            {
              "name": "dayLoop",
              "type": "number | null | undefined",
              "description": "Optional looping functionality for the day. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a day value is increased or decreased (between dayMin and dayMax). If a value is greater than dayMax, the value will immediately be changed to dayMin.\nIf a value is smaller than dayMin, the value will immediately be changed to dayMax. Requires dayMax value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 161,
                  "column": 3
                },
                "end": {
                  "line": 164,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "dayStep",
              "type": "number | null | undefined",
              "description": "Amount to add or subtract when incrementing or decrementing a day value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 169,
                  "column": 3
                },
                "end": {
                  "line": 172,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "hourMin",
              "type": "number | null | undefined",
              "description": "Optional minimum allowed when an hour value is decreased. If a value is smaller than hourMin, the value will immediately be changed to hourMin.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 177,
                  "column": 3
                },
                "end": {
                  "line": 180,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "hourMax",
              "type": "number | null | undefined",
              "description": "Optional maximum allowed when an hour value is increased. If a value is greater than hourMax, the value will immediately be changed to hourMax.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 185,
                  "column": 3
                },
                "end": {
                  "line": 188,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "23"
            },
            {
              "name": "hourLoop",
              "type": "number | null | undefined",
              "description": "Optional looping functionality for the hour. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when an hour value is increased or decreased (between hourMin and hourMax). If a value is greater than hourMax, the value will immediately be changed to hourMin.\nIf a value is smaller than hourMin, the value will immediately be changed to hourMax. Requires hourMax value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 195,
                  "column": 3
                },
                "end": {
                  "line": 198,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "hourStep",
              "type": "number | null | undefined",
              "description": "Amount to add or subtract when incrementing or decrementing an hour value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 203,
                  "column": 3
                },
                "end": {
                  "line": 206,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "minuteMin",
              "type": "number | null | undefined",
              "description": "Optional minimum allowed when a minute value is decreased. If a value is smaller than minuteMin, the value will immediately be changed to minuteMin.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 211,
                  "column": 3
                },
                "end": {
                  "line": 214,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "minuteMax",
              "type": "number | null | undefined",
              "description": "Optional maximum allowed when a minute value is increased. If a value is greater than minuteMax, the value will immediately be changed to minuteMax.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 219,
                  "column": 3
                },
                "end": {
                  "line": 222,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "59"
            },
            {
              "name": "minuteLoop",
              "type": "number | null | undefined",
              "description": "Optional looping functionality for the minute. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a minute value is increased or decreased (between minuteMin and minuteMax). If a value is greater than minuteMax, the value will immediately be changed to minuteMin.\nIf a value is smaller than minuteMin, the value will immediately be changed to minuteMax. Requires minuteMax value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 229,
                  "column": 3
                },
                "end": {
                  "line": 232,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "minuteStep",
              "type": "number | null | undefined",
              "description": "Amount to add or subtract when incrementing or decrementing a minute value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 237,
                  "column": 3
                },
                "end": {
                  "line": 240,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "secondMin",
              "type": "number | null | undefined",
              "description": "Optional minimum allowed when a second value is decreased. If a value is smaller than secondMin, the value will immediately be changed to secondMin.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 245,
                  "column": 3
                },
                "end": {
                  "line": 248,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "secondMax",
              "type": "number | null | undefined",
              "description": "Optional maximum allowed when a second value is increased. If a value is greater than secondMax, the value will immediately be changed to secondMax.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 253,
                  "column": 3
                },
                "end": {
                  "line": 256,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "59"
            },
            {
              "name": "secondLoop",
              "type": "number | null | undefined",
              "description": "Optional looping functionality for the second. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a second value is increased or decreased (between secondMin and secondMax). If a value is greater than secondMax, the value will immediately be changed to secondMin.\nIf a value is smaller than secondMin, the value will immediately be changed to secondMax. Requires secondMax value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 263,
                  "column": 3
                },
                "end": {
                  "line": 266,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "secondStep",
              "type": "number | null | undefined",
              "description": "Amount to add or subtract when incrementing or decrementing a second value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 271,
                  "column": 3
                },
                "end": {
                  "line": 274,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "millisecondMin",
              "type": "number | null | undefined",
              "description": "Optional minimum allowed when a millisecond value is decreased. If a value is smaller than millisecondMin, the value will immediately be changed to millisecondMin.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 279,
                  "column": 3
                },
                "end": {
                  "line": 282,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "0"
            },
            {
              "name": "millisecondMax",
              "type": "number | null | undefined",
              "description": "Optional maximum allowed when a millisecond value is increased. If a value is greater than millisecondMax, the value will immediately be changed to millisecondMax.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 287,
                  "column": 3
                },
                "end": {
                  "line": 290,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "999"
            },
            {
              "name": "millisecondLoop",
              "type": "number | null | undefined",
              "description": "Optional looping functionality for the millisecond. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a millisecond value is increased or decreased (between millisecondMin and millisecondMax). If a value is greater than millisecondMax, the value will immediately be changed to millisecondMin.\nIf a value is smaller than millisecondMin, the value will immediately be changed to millisecondMax. Requires millisecondMax value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 297,
                  "column": 3
                },
                "end": {
                  "line": 300,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "millisecondStep",
              "type": "number | null | undefined",
              "description": "Amount to add or subtract when incrementing or decrementing a millisecond value.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 305,
                  "column": 3
                },
                "end": {
                  "line": 308,
                  "column": 4
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            }
          ],
          "methods": [
            {
              "name": "formatDisplayedDuration",
              "description": "Return a formatted string duration to display (periods and values).\nOnly duration periods that have a value will be displayed.\nEach duration period is followed by its period label (adjust to singular/plural).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 317,
                  "column": 1
                },
                "end": {
                  "line": 334,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayedDuration"
                }
              ]
            },
            {
              "name": "addDisplayedPeriod",
              "description": "Return a string duration to display a given period.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 340,
                  "column": 1
                },
                "end": {
                  "line": 358,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "periodValue"
                },
                {
                  "name": "period"
                }
              ]
            },
            {
              "name": "getDisplayedDuration",
              "description": "Process the numeric duration value and return an object that contains the duration values.\nOnly duration values that are part of the duration displayToken are returned.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 364,
                  "column": 1
                },
                "end": {
                  "line": 422,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "durationValue"
                },
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "handleDurationValueForNonDisplayedMonths",
              "description": "Return an adjusted duration value (if the month was removed).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 427,
                  "column": 2
                },
                "end": {
                  "line": 435,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "durationValue"
                }
              ]
            },
            {
              "name": "calculateDurationValue",
              "description": "Return a numeric calculated duration value for a given duration object.\nThis is the numeric value that can be saved.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 441,
                  "column": 2
                },
                "end": {
                  "line": 464,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "periods"
                }
              ]
            },
            {
              "name": "isLoop",
              "description": "Return true if the loop value is 1, and return false if it is 0. Otherwise, keep the default loop setting.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 469,
                  "column": 2
                },
                "end": {
                  "line": 477,
                  "column": 4
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "loopValue"
                }
              ]
            },
            {
              "name": "isNumericPositiveValue",
              "description": "Return true if the value is numeric and positive. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 482,
                  "column": 2
                },
                "end": {
                  "line": 488,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "isDisplayYears",
              "description": "Return true if the given display tokens include the symbol for the year. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 493,
                  "column": 2
                },
                "end": {
                  "line": 495,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "isDisplayMonths",
              "description": "Return true if the given display tokens include the symbol for the month. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 500,
                  "column": 2
                },
                "end": {
                  "line": 502,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "isDisplayWeeks",
              "description": "Return true if the given display tokens include the symbol for the week. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 507,
                  "column": 2
                },
                "end": {
                  "line": 509,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "isDisplayDays",
              "description": "Return true if the given display tokens include the symbol for the day. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 514,
                  "column": 2
                },
                "end": {
                  "line": 516,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "isDisplayHours",
              "description": "Return true if the given display tokens include the symbol for the hour. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 521,
                  "column": 2
                },
                "end": {
                  "line": 523,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "isDisplayMinutes",
              "description": "Return true if the given display tokens include the symbol for the minute. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 528,
                  "column": 2
                },
                "end": {
                  "line": 530,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "isDisplaySeconds",
              "description": "Return true if the given display tokens include the symbol for the second. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 535,
                  "column": 2
                },
                "end": {
                  "line": 537,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "isDisplayMilliseconds",
              "description": "Return true if the given display tokens include the symbol for the millisecond. Otherwise, return false.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 542,
                  "column": 2
                },
                "end": {
                  "line": 544,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "displayTokens"
                }
              ]
            },
            {
              "name": "handleTranslation",
              "description": "Return a translated period label.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 549,
                  "column": 2
                },
                "end": {
                  "line": 586,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "durationPeriod"
                }
              ]
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 13
            },
            "end": {
              "line": 588,
              "column": 1
            }
          },
          "privacy": "public",
          "name": "TriPlatDurationBehavior",
          "attributes": [
            {
              "name": "year-min",
              "description": "Optional minimum allowed when a year value is decreased. If a value is smaller than yearMin, the value will immediately be changed to yearMin.",
              "sourceRange": {
                "start": {
                  "line": 43,
                  "column": 3
                },
                "end": {
                  "line": 46,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "year-max",
              "description": "Optional maximum allowed when a year value is increased. If a value is greater than yearMax, the value will immediately be changed to yearMax.",
              "sourceRange": {
                "start": {
                  "line": 51,
                  "column": 3
                },
                "end": {
                  "line": 53,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "year-loop",
              "description": "Optional looping functionality for the year. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a year value is increased or decreased (between yearMin and yearMax). If a value is greater than yearMax, the value will immediately be changed to yearMin.\nIf a value is smaller than yearMin, the value will immediately be changed to yearMax. Requires yearMax value.",
              "sourceRange": {
                "start": {
                  "line": 60,
                  "column": 3
                },
                "end": {
                  "line": 63,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "year-step",
              "description": "Amount to add or subtract when incrementing or decrementing a year value.",
              "sourceRange": {
                "start": {
                  "line": 68,
                  "column": 3
                },
                "end": {
                  "line": 71,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "month-min",
              "description": "Optional minimum allowed when a month value is decreased. If a value is smaller than monthMin, the value will immediately be changed to monthMin.",
              "sourceRange": {
                "start": {
                  "line": 76,
                  "column": 3
                },
                "end": {
                  "line": 79,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "month-max",
              "description": "Optional maximum allowed when a month value is increased. If a value is greater than monthMax, the value will immediately be changed to monthMax.",
              "sourceRange": {
                "start": {
                  "line": 84,
                  "column": 3
                },
                "end": {
                  "line": 87,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "month-loop",
              "description": "Optional looping functionality for the month. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a month value is increased or decreased (between monthMin and monthMax). If a value is greater than monthMax, the value will immediately be changed to monthMin.\nIf a value is smaller than monthMin, the value will immediately be changed to monthMax. Requires monthMax value.",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 3
                },
                "end": {
                  "line": 97,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "month-step",
              "description": "Amount to add or subtract when incrementing or decrementing a month value.",
              "sourceRange": {
                "start": {
                  "line": 102,
                  "column": 3
                },
                "end": {
                  "line": 105,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "week-min",
              "description": "Optional minimum allowed when a week value is decreased. If a value is smaller than weekMin, the value will immediately be changed to weekMin.",
              "sourceRange": {
                "start": {
                  "line": 110,
                  "column": 3
                },
                "end": {
                  "line": 113,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "week-max",
              "description": "Optional maximum allowed when a week value is increased. If a value is greater than weekMax, the value will immediately be changed to weekMax.",
              "sourceRange": {
                "start": {
                  "line": 118,
                  "column": 3
                },
                "end": {
                  "line": 120,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "week-loop",
              "description": "Optional looping functionality for the week. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a week value is increased or decreased (between weekMin and weekMax). If a value is greater than weekMax, the value will immediately be changed to weekMin.\nIf a value is smaller than weekMin, the value will immediately be changed to weekMax. Requires weekMax value.",
              "sourceRange": {
                "start": {
                  "line": 127,
                  "column": 3
                },
                "end": {
                  "line": 130,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "week-step",
              "description": "Amount to add or subtract when incrementing or decrementing a week value.",
              "sourceRange": {
                "start": {
                  "line": 135,
                  "column": 3
                },
                "end": {
                  "line": 138,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "day-min",
              "description": "Optional minimum allowed when a day value is decreased. If a value is smaller than dayMin, the value will immediately be changed to dayMin.",
              "sourceRange": {
                "start": {
                  "line": 143,
                  "column": 3
                },
                "end": {
                  "line": 146,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "day-max",
              "description": "Optional maximum allowed when a day value is increased. If a value is greater than dayMax, the value will immediately be changed to dayMax.",
              "sourceRange": {
                "start": {
                  "line": 151,
                  "column": 3
                },
                "end": {
                  "line": 154,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "day-loop",
              "description": "Optional looping functionality for the day. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a day value is increased or decreased (between dayMin and dayMax). If a value is greater than dayMax, the value will immediately be changed to dayMin.\nIf a value is smaller than dayMin, the value will immediately be changed to dayMax. Requires dayMax value.",
              "sourceRange": {
                "start": {
                  "line": 161,
                  "column": 3
                },
                "end": {
                  "line": 164,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "day-step",
              "description": "Amount to add or subtract when incrementing or decrementing a day value.",
              "sourceRange": {
                "start": {
                  "line": 169,
                  "column": 3
                },
                "end": {
                  "line": 172,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "hour-min",
              "description": "Optional minimum allowed when an hour value is decreased. If a value is smaller than hourMin, the value will immediately be changed to hourMin.",
              "sourceRange": {
                "start": {
                  "line": 177,
                  "column": 3
                },
                "end": {
                  "line": 180,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "hour-max",
              "description": "Optional maximum allowed when an hour value is increased. If a value is greater than hourMax, the value will immediately be changed to hourMax.",
              "sourceRange": {
                "start": {
                  "line": 185,
                  "column": 3
                },
                "end": {
                  "line": 188,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "hour-loop",
              "description": "Optional looping functionality for the hour. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when an hour value is increased or decreased (between hourMin and hourMax). If a value is greater than hourMax, the value will immediately be changed to hourMin.\nIf a value is smaller than hourMin, the value will immediately be changed to hourMax. Requires hourMax value.",
              "sourceRange": {
                "start": {
                  "line": 195,
                  "column": 3
                },
                "end": {
                  "line": 198,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "hour-step",
              "description": "Amount to add or subtract when incrementing or decrementing an hour value.",
              "sourceRange": {
                "start": {
                  "line": 203,
                  "column": 3
                },
                "end": {
                  "line": 206,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "minute-min",
              "description": "Optional minimum allowed when a minute value is decreased. If a value is smaller than minuteMin, the value will immediately be changed to minuteMin.",
              "sourceRange": {
                "start": {
                  "line": 211,
                  "column": 3
                },
                "end": {
                  "line": 214,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "minute-max",
              "description": "Optional maximum allowed when a minute value is increased. If a value is greater than minuteMax, the value will immediately be changed to minuteMax.",
              "sourceRange": {
                "start": {
                  "line": 219,
                  "column": 3
                },
                "end": {
                  "line": 222,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "minute-loop",
              "description": "Optional looping functionality for the minute. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a minute value is increased or decreased (between minuteMin and minuteMax). If a value is greater than minuteMax, the value will immediately be changed to minuteMin.\nIf a value is smaller than minuteMin, the value will immediately be changed to minuteMax. Requires minuteMax value.",
              "sourceRange": {
                "start": {
                  "line": 229,
                  "column": 3
                },
                "end": {
                  "line": 232,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "minute-step",
              "description": "Amount to add or subtract when incrementing or decrementing a minute value.",
              "sourceRange": {
                "start": {
                  "line": 237,
                  "column": 3
                },
                "end": {
                  "line": 240,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "second-min",
              "description": "Optional minimum allowed when a second value is decreased. If a value is smaller than secondMin, the value will immediately be changed to secondMin.",
              "sourceRange": {
                "start": {
                  "line": 245,
                  "column": 3
                },
                "end": {
                  "line": 248,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "second-max",
              "description": "Optional maximum allowed when a second value is increased. If a value is greater than secondMax, the value will immediately be changed to secondMax.",
              "sourceRange": {
                "start": {
                  "line": 253,
                  "column": 3
                },
                "end": {
                  "line": 256,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "second-loop",
              "description": "Optional looping functionality for the second. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a second value is increased or decreased (between secondMin and secondMax). If a value is greater than secondMax, the value will immediately be changed to secondMin.\nIf a value is smaller than secondMin, the value will immediately be changed to secondMax. Requires secondMax value.",
              "sourceRange": {
                "start": {
                  "line": 263,
                  "column": 3
                },
                "end": {
                  "line": 266,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "second-step",
              "description": "Amount to add or subtract when incrementing or decrementing a second value.",
              "sourceRange": {
                "start": {
                  "line": 271,
                  "column": 3
                },
                "end": {
                  "line": 274,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "millisecond-min",
              "description": "Optional minimum allowed when a millisecond value is decreased. If a value is smaller than millisecondMin, the value will immediately be changed to millisecondMin.",
              "sourceRange": {
                "start": {
                  "line": 279,
                  "column": 3
                },
                "end": {
                  "line": 282,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "millisecond-max",
              "description": "Optional maximum allowed when a millisecond value is increased. If a value is greater than millisecondMax, the value will immediately be changed to millisecondMax.",
              "sourceRange": {
                "start": {
                  "line": 287,
                  "column": 3
                },
                "end": {
                  "line": 290,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "millisecond-loop",
              "description": "Optional looping functionality for the millisecond. When set to 1, looping is enabled, and when set to 0, looping is disabled.\nLooping occurs when a millisecond value is increased or decreased (between millisecondMin and millisecondMax). If a value is greater than millisecondMax, the value will immediately be changed to millisecondMin.\nIf a value is smaller than millisecondMin, the value will immediately be changed to millisecondMax. Requires millisecondMax value.",
              "sourceRange": {
                "start": {
                  "line": 297,
                  "column": 3
                },
                "end": {
                  "line": 300,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "millisecond-step",
              "description": "Amount to add or subtract when incrementing or decrementing a millisecond value.",
              "sourceRange": {
                "start": {
                  "line": 305,
                  "column": 3
                },
                "end": {
                  "line": 308,
                  "column": 4
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  }
}
