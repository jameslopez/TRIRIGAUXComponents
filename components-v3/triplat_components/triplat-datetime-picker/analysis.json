{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A component that provides an input box with a calendar icon. Clicking on the icon \nbrings up a calendar and allows you to select a datetime from the calendar.\n\n\t <triplat-datetime-picker value=\"{{value}}\"></triplat-datetime-picker>\n\t \nNote: The pop-up calendar will be centered when opened on a mobile device. \n\nExample of setting minutes increase and decrease by 15.\n\n\t <triplat-datetime-picker value=\"{{value}}\" \n\t   step-minute=\"15\">\n\t </triplat-datetime-picker>\n\nExample of using custom label. In order for an element to be considered as a label, it must have the `label` slot attribute.\n\n\t<triplat-datetime-picker value=\"{{searchStart}}\">\n\t  <iron-icon slot=\"label\" icon=\"av:play-arrow\"></iron-icon>\n\t  <span slot=\"label\">Start</span>\n\t</triplat-datetime-picker>\n\n\t<triplat-datetime-picker value=\"{{searchEnd}}\">\n\t  <iron-icon slot=\"label\" icon=\"av:stop\"></iron-icon>\n\t  <span slot=\"label\">End</span>\n\t</triplat-datetime-picker>\n\nNote: The 'label' property value will be overridden when using a custom 'label' slot. <br/>\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--triplat-date-picker-width` | Width of the input field | `100%`\n`--triplat-date-picker-header-bg-color` | Background color for the header | `--tri-primary-color-40`\n`--triplat-date-picker-header-sec-bg-color` | Secondary background color for the header | `--tri-primary-color-30`\n`--triplat-date-picker-weekday-color` | Color for the weekday column header | `--ibm-gray-60`\n`--triplat-date-picker-cancel-button` | Mixin applied to the cancel button | `{}`\n`--triplat-date-picker-done-button` | Mixin applied to the done button | `{}`\n`--triplat-date-picker-selected-bg-color` | Color of the background for a selected day or year | `--tri-primary-color-30`\n`--triplat-date-picker-disabled-color` | Color of the disabled days | `--ibm-gray-50`\n`--triplat-date-picker-landscape-bg-color` | Color of the background in landscape mode | `--tri-primary-color-30`\n`--triplat-date-picker-icon-size` | Size of the calendar icon | `24px`\n`--triplat-date-picker-icon-color` | Color of the component icons | `--tri-primary-content-color`\n`--triplat-date-picker-icon` | Mixin applied to the picker icon | `{}`\n\nSee `Polymer.PaperInputContainer` for a list of custom properties that can be used to style the paper-input element contained within this element.\n\n### Utilities\n\nSee `triplat-date-utilites` for more API docs.",
      "summary": "",
      "path": "triplat-datetime-picker.js",
      "properties": [
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The ISO date format",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 5
            },
            "end": {
              "line": 198,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_dateValue",
          "type": "Date | null | undefined",
          "description": "Representation of the value as a java.util.Date object",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 5
            },
            "end": {
              "line": 206,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dateValueChanged\"",
              "attributeType": "Date"
            }
          }
        },
        {
          "name": "header",
          "type": "boolean | null | undefined",
          "description": "Flag indicating whether to display a block above the calendar containing\nthe day of the week, month, day, and year of the currently selected value.<br>\n<b>true</b> means display the header above the calendar.<br>\n<b>false</b> means just display the calendar without the header block.<br>",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 5
            },
            "end": {
              "line": 217,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "String value to be used for the label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 5
            },
            "end": {
              "line": 225,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Boolean value to indicate that this is a disabled date value input field. Show\nthe value, but not the datetime picker. The value will be grayed out and not editable.\nThe value will be underlined to indicate it is an input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 5
            },
            "end": {
              "line": 235,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Boolean value to indicate that this is a readonly date value. Show\nthe value, but not the datetime picker.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 5
            },
            "end": {
              "line": 244,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "nullDateInvalid",
          "type": "boolean | null | undefined",
          "description": "Boolean value to indicate that a null date should be considered as invalid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 5
            },
            "end": {
              "line": 252,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableKeyboardInput",
          "type": "boolean | null | undefined",
          "description": "If true, the keyboard input is disabled and the user can only change the date by using the calendar.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 3
            },
            "end": {
              "line": 260,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_errorMsg",
          "type": "string | null | undefined",
          "description": "String value that is null when no error exists or it contains the current error\nmessage if the existing value is invalid.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 5
            },
            "end": {
              "line": 270,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "_time",
          "type": "boolean | null | undefined",
          "description": "Flag indicating whether to display time in the calendar.<br>\n<b>true</b> means display the time in the calendar.<br>\n<b>false</b> means just display the calendar without the time.<br>",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 5
            },
            "end": {
              "line": 280,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "_militaryTime",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 5
            },
            "end": {
              "line": 285,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "timeZone",
          "type": "string | null | undefined",
          "description": "String value to be used for the time zone.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 5
            },
            "end": {
              "line": 293,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_timeZoneChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_currentTimeZone",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 5
            },
            "end": {
              "line": 297,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_initiatedDate",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 5
            },
            "end": {
              "line": 301,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_datetimeInvlidmsg",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 303,
              "column": 5
            },
            "end": {
              "line": 305,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_datetimePattern",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 5
            },
            "end": {
              "line": 309,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_enteredDateValue",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 5
            },
            "end": {
              "line": 312,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disallowWeekends",
          "type": "boolean | null | undefined",
          "description": "Flag indicating whether to disable weekends and make them become gray color and unselectable in the calendar.<br>",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 5
            },
            "end": {
              "line": 320,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disallowPastDates",
          "type": "boolean | null | undefined",
          "description": "Flag that indicates whether to allow the user to select any date, or just select dates\nin the future. If this is specified, then only dates in the future, excluding today's date, will be able\nto be selected. Even if the specific hour is in the future, the user still cannot select today's date.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 5
            },
            "end": {
              "line": 329,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "displayFormat",
          "type": "string | null | undefined",
          "description": "Datetime format strings",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 5
            },
            "end": {
              "line": 336,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"MM/DD/YYYY hh:mm a\""
        },
        {
          "name": "_noCancelOnOutsideClick",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 5
            },
            "end": {
              "line": 341,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_noCancelOnEscKey",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 5
            },
            "end": {
              "line": 346,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "focused",
          "type": "boolean | null | undefined",
          "description": "True if the input has focus.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 5
            },
            "end": {
              "line": 355,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "True if the input is invalid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 5
            },
            "end": {
              "line": 365,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_isoDateLength",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 5
            },
            "end": {
              "line": 370,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_isoUTCDateLength",
          "type": "number | null | undefined",
          "description": "Returns the length of a datetime using the UTC time zone.\nFor example \"2016-06-08T23:30:00.000Z\" is a datetime with the UTC timezone.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 5
            },
            "end": {
              "line": 378,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "disableErrorMsg",
          "type": "boolean | null | undefined",
          "description": "Flag that indicates whether to allow the message to alert when the user enters an invalid datetime.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 5
            },
            "end": {
              "line": 386,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean | null | undefined",
          "description": "Set to true to always float the label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 5
            },
            "end": {
              "line": 394,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "noLabelFloat",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable the floating label.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 5
            },
            "end": {
              "line": 402,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableSelectYear",
          "type": "boolean | null | undefined",
          "description": "Set to true to disable select year.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 5
            },
            "end": {
              "line": 410,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "displaySeconds",
          "type": "boolean | null | undefined",
          "description": "Set to true to display seconds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 5
            },
            "end": {
              "line": 418,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "stepHour",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when increasing or decreasing hours.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 423,
              "column": 5
            },
            "end": {
              "line": 426,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "stepMinute",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when increasing or decreasing minutes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 5
            },
            "end": {
              "line": 434,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "stepSecond",
          "type": "number | null | undefined",
          "description": "Amount to add or subtract when increasing or decreasing seconds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 5
            },
            "end": {
              "line": 442,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "_userValueChange",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 444,
              "column": 5
            },
            "end": {
              "line": 447,
              "column": 6
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_fireUserChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_lang",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 449,
              "column": 5
            },
            "end": {
              "line": 449,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "allowClickThrough",
          "type": "boolean | null | undefined",
          "description": "Set to true to allow clicks to go through overlays.\nWhen the user clicks outside this overlay, the click may close the overlay below.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 3
            },
            "end": {
              "line": 457,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_calendarDateSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 5
            },
            "end": {
              "line": 462,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notDisabledReadonly",
          "description": "Neither disabled nor readonly flag were set",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 2
            },
            "end": {
              "line": 472,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "readonly"
            }
          ]
        },
        {
          "name": "_readonlyNoDisableLabel",
          "description": "readonly flag was set, but disabled was not set",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 476,
              "column": 2
            },
            "end": {
              "line": 478,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "readonly"
            },
            {
              "name": "label"
            }
          ]
        },
        {
          "name": "_readonlyNoDisabledNoLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 5
            },
            "end": {
              "line": 486,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "readonly"
            },
            {
              "name": "label"
            }
          ]
        },
        {
          "name": "_dateValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 488,
              "column": 5
            },
            "end": {
              "line": 501,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_directEdit",
          "description": "Handle user directly entering a new value into the input field\nwithout using the calendar.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 507,
              "column": 2
            },
            "end": {
              "line": 533,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openTriCalendar",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 535,
              "column": 5
            },
            "end": {
              "line": 565,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 5
            },
            "end": {
              "line": 570,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 572,
              "column": 5
            },
            "end": {
              "line": 578,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleLocale",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 5
            },
            "end": {
              "line": 585,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_convertedToLocalTimeZone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 587,
              "column": 5
            },
            "end": {
              "line": 600,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_timeZoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 602,
              "column": 5
            },
            "end": {
              "line": 609,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newtz"
            },
            {
              "name": "oldtz"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getDateTime",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 611,
              "column": 5
            },
            "end": {
              "line": 626,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setPickerAriaLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 628,
              "column": 5
            },
            "end": {
              "line": 638,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "_closeCalendar",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 640,
              "column": 5
            },
            "end": {
              "line": 643,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openCalendar",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 645,
              "column": 5
            },
            "end": {
              "line": 648,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_changeToBrowserTimeZone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 650,
              "column": 5
            },
            "end": {
              "line": 665,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "clearDatetimeValue",
          "description": "Handle clear value from the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 670,
              "column": 2
            },
            "end": {
              "line": 679,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 681,
              "column": 5
            },
            "end": {
              "line": 683,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleCustomLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 685,
              "column": 5
            },
            "end": {
              "line": 689,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleBrowserResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 691,
              "column": 5
            },
            "end": {
              "line": 696,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireInputChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 698,
              "column": 5
            },
            "end": {
              "line": 700,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireUserChanged",
          "description": "or click on the date from the calendar",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 704,
              "column": 2
            },
            "end": {
              "line": 706,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "closeCalendar",
          "description": "Close the calendar dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 711,
              "column": 2
            },
            "end": {
              "line": 714,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeInputReadonly",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 716,
              "column": 2
            },
            "end": {
              "line": 718,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            },
            {
              "name": "disableKeyboardInput"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 89,
          "column": 12
        },
        "end": {
          "line": 719,
          "column": 2
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "value",
          "description": "The ISO date format",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 5
            },
            "end": {
              "line": 198,
              "column": 6
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "header",
          "description": "Flag indicating whether to display a block above the calendar containing\nthe day of the week, month, day, and year of the currently selected value.<br>\n<b>true</b> means display the header above the calendar.<br>\n<b>false</b> means just display the calendar without the header block.<br>",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 5
            },
            "end": {
              "line": 217,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "String value to be used for the label.",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 5
            },
            "end": {
              "line": 225,
              "column": 6
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Boolean value to indicate that this is a disabled date value input field. Show\nthe value, but not the datetime picker. The value will be grayed out and not editable.\nThe value will be underlined to indicate it is an input field.",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 5
            },
            "end": {
              "line": 235,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Boolean value to indicate that this is a readonly date value. Show\nthe value, but not the datetime picker.",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 5
            },
            "end": {
              "line": 244,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "null-date-invalid",
          "description": "Boolean value to indicate that a null date should be considered as invalid.",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 5
            },
            "end": {
              "line": 252,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-keyboard-input",
          "description": "If true, the keyboard input is disabled and the user can only change the date by using the calendar.",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 3
            },
            "end": {
              "line": 260,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "time-zone",
          "description": "String value to be used for the time zone.",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 5
            },
            "end": {
              "line": 293,
              "column": 6
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disallow-weekends",
          "description": "Flag indicating whether to disable weekends and make them become gray color and unselectable in the calendar.<br>",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 5
            },
            "end": {
              "line": 320,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disallow-past-dates",
          "description": "Flag that indicates whether to allow the user to select any date, or just select dates\nin the future. If this is specified, then only dates in the future, excluding today's date, will be able\nto be selected. Even if the specific hour is in the future, the user still cannot select today's date.",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 5
            },
            "end": {
              "line": 329,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "display-format",
          "description": "Datetime format strings",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 5
            },
            "end": {
              "line": 336,
              "column": 6
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "focused",
          "description": "True if the input has focus.",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 5
            },
            "end": {
              "line": 355,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "invalid",
          "description": "True if the input is invalid.",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 5
            },
            "end": {
              "line": 365,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-error-msg",
          "description": "Flag that indicates whether to allow the message to alert when the user enters an invalid datetime.",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 5
            },
            "end": {
              "line": 386,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label.",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 5
            },
            "end": {
              "line": 394,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label.",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 5
            },
            "end": {
              "line": 402,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-select-year",
          "description": "Set to true to disable select year.",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 5
            },
            "end": {
              "line": 410,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "display-seconds",
          "description": "Set to true to display seconds.",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 5
            },
            "end": {
              "line": 418,
              "column": 6
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "step-hour",
          "description": "Amount to add or subtract when increasing or decreasing hours.",
          "sourceRange": {
            "start": {
              "line": 423,
              "column": 5
            },
            "end": {
              "line": 426,
              "column": 6
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step-minute",
          "description": "Amount to add or subtract when increasing or decreasing minutes.",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 5
            },
            "end": {
              "line": 434,
              "column": 6
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step-second",
          "description": "Amount to add or subtract when increasing or decreasing seconds.",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 5
            },
            "end": {
              "line": 442,
              "column": 6
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "allow-click-through",
          "description": "Set to true to allow clicks to go through overlays.\nWhen the user clicks outside this overlay, the click may close the overlay below.",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 3
            },
            "end": {
              "line": 457,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "datetime-picker-change",
          "description": "Fired when the datetime-picker value changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "datetime-picker-input-change",
          "description": "Fired every time the value is typed into the datetime-picker input field.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "datetime-picker-user-change",
          "description": "Fired when the datetime-picker input changes due to user interaction.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "focused-changed",
          "description": "Fired when the `focused` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "triplat-datetime-picker"
    }
  ]
}
